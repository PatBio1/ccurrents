//Generated by FuseIT WSDL2Apex

@isTest
private class OnbeWsManageCardTest {
	
	@isTest static void coverGeneratedCodeTypes() {
		Test.setMock(WebServiceMock.class, new OnbeWsManageCardHttpMock());
		OnbeWsManageCard parentObject = new OnbeWsManageCard();
		DOM.Document doc = new DOM.Document();
		DOM.XmlNode mockNode = doc.createRootElement('Envelope', 'http://schemas.xmlsoap.org/soap/envelope/', 'env');
		new OnbeCardAccountOperations.AccountInquiry(mockNode);				
		new OnbeCardAccountOperations.AccountProfile(mockNode);				
		new OnbeCardAccountOperations.Balance(mockNode);				
		new OnbeCardAccountOperations.CardDetail(mockNode);				
		//new OnbeCardAccountOperations.CommentHistory(mockNode);				
		//new OnbeCardAccountOperations.EscalationAssigneeValue(mockNode);				
		//new OnbeCardAccountOperations.EscalationResponse(mockNode);				
		new OnbeCardAccountOperations.GetCsaInquiryTypesByInquiryCategoryValue(mockNode);				
		new OnbeCardAccountOperations.GetCsaInquiryTypesCategoryValue(mockNode);				
		new OnbeCardAccountOperations.PaymentDetail(mockNode);				
		new OnbeCardAccountOperations.PayoutAccountInquiry(mockNode);				
		//new OnbeCardAccountOperations.PayoutApp(mockNode);				
		//new OnbeCardAccountOperations.PayoutAppRegistration(mockNode);				
		new OnbeCardAccountOperations.Registration(mockNode);				
		new OnbeCardAccountOperations.ReissueResponse(mockNode);				
		new OnbeCardAccountOperations.Response(mockNode);				
		//new OnbeCardAccountOperations.TransactionDetail(mockNode);				
		OnbeCardAccountOperations.AccountInquiry Obj1 = new OnbeCardAccountOperations.AccountInquiry();
		Obj1.populateXmlNode(mockNode);
		OnbeCardAccountOperations.ParseDateTime('2014-11-05T13:15:30Z');
		OnbeCardAccountOperations.AccountProfile Obj2 = new OnbeCardAccountOperations.AccountProfile();
		Obj2.populateXmlNode(mockNode);
		OnbeCardAccountOperations.Balance Obj3 = new OnbeCardAccountOperations.Balance();
		Obj3.populateXmlNode(mockNode);
		OnbeCardAccountOperations.CardDetail Obj4 = new OnbeCardAccountOperations.CardDetail();
		Obj4.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.CommentHistory Obj5 = new OnbeCardAccountOperations.CommentHistory();
		// Obj5.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.EscalationAssigneeValue Obj6 = new OnbeCardAccountOperations.EscalationAssigneeValue();
		// Obj6.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.EscalationResponse Obj7 = new OnbeCardAccountOperations.EscalationResponse();
		// Obj7.populateXmlNode(mockNode);
		OnbeCardAccountOperations.GetCsaInquiryTypesByInquiryCategoryValue Obj8 = new OnbeCardAccountOperations.GetCsaInquiryTypesByInquiryCategoryValue();
		Obj8.populateXmlNode(mockNode);
		OnbeCardAccountOperations.GetCsaInquiryTypesCategoryValue Obj9 = new OnbeCardAccountOperations.GetCsaInquiryTypesCategoryValue();
		Obj9.populateXmlNode(mockNode);
		OnbeCardAccountOperations.PaymentDetail Obj10 = new OnbeCardAccountOperations.PaymentDetail();
		Obj10.populateXmlNode(mockNode);
		OnbeCardAccountOperations.PayoutAccountInquiry Obj11 = new OnbeCardAccountOperations.PayoutAccountInquiry();
		Obj11.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.PayoutApp Obj12 = new OnbeCardAccountOperations.PayoutApp();
		// Obj12.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.PayoutAppRegistration Obj13 = new OnbeCardAccountOperations.PayoutAppRegistration();
		// Obj13.populateXmlNode(mockNode);
		OnbeCardAccountOperations.Registration Obj14 = new OnbeCardAccountOperations.Registration();
		Obj14.populateXmlNode(mockNode);
		OnbeCardAccountOperations.ReissueResponse Obj15 = new OnbeCardAccountOperations.ReissueResponse();
		Obj15.populateXmlNode(mockNode);
		OnbeCardAccountOperations.Response Obj16 = new OnbeCardAccountOperations.Response();
		Obj16.populateXmlNode(mockNode);
		// OnbeCardAccountOperations.TransactionDetail Obj17 = new OnbeCardAccountOperations.TransactionDetail();
		// Obj17.populateXmlNode(mockNode);
	}
    
	@isTest static void coverCodeForaccountInquiry(){
		Test.setMock(WebServiceMock.class, new OnbeWsManageCardHttpMock());
		OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
		testObject.accountInquiry();
	}
	@isTest static void coverCodeForpayoutAccountInquiry(){
		Test.setMock(WebServiceMock.class, new OnbeWsManageCardHttpMock());
		OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
		testObject.payoutAccountInquiry();
	}
	// @isTest static void coverCodeForreissueCard(){
	// 	Test.setMock(WebServiceMock.class, new OnbeWsManageCardHttpMock());
	// 	OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
	// 	testObject.reissueCard();
	// }
	// @isTest static void coverCodeForupdateAccountProfile(){
	// 	Test.setMock(WebServiceMock.class, new OnbeWsManageCardHttpMock());
	// 	OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
	// 	testObject.updateAccountProfile();
	// }
	@isTest static void coverCodeForaccountInquiry_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsManageCardHttpCalloutMock());
		OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
		testObject.accountInquiry_Http();		
	}
	@isTest static void coverCodeForpayoutAccountInquiry_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsManageCardHttpCalloutMock());
		OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
		testObject.payoutAccountInquiry_Http();		
	}
	// @isTest static void coverCodeForreissueCard_Http(){
	// 	Test.setMock(HttpCalloutMock.class, new OnbeWsManageCardHttpCalloutMock());
	// 	OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
	// 	testObject.reissueCard_Http();		
	// }

	// @isTest static void coverCodeForupdateAccountProfile_Http(){
	// 	Test.setMock(HttpCalloutMock.class, new OnbeWsManageCardHttpCalloutMock());
	// 	OnbeWsManageCard.AccountManagement testObject = new OnbeWsManageCard.AccountManagement();
	// 	testObject.updateAccountProfile_Http();		
	// }
}