version: 2
jobs: 
  build: 
    docker:
      - image: cimg/node:19.3.0-browsers
    steps: 
      - checkout
      - run: 
          command: |
              sudo npm install sfdx-cli@7 --global 
          name: "Install sfdx"
      - run:
          command: |
              sudo npm update --global sfdx-cli
              sfdx --version
              mkdir -p /tmp/artifacts/test_results
          name: "Update sfdx"
      - run: 
          command: |
              echo $SFDXURL_INTQA > /tmp/sfdx.url
              sfdx force:auth:sfdxurl:store -f /tmp/sfdx.url -a INTQA
              echo $SFDXURL_UATSTAGING > /tmp/sfdx.url
              sfdx force:auth:sfdxurl:store -f /tmp/sfdx.url -a UATSTAGING
              echo $SFDXURL_PROD > /tmp/sfdx.url
              sfdx force:auth:sfdxurl:store -f /tmp/sfdx.url -a PROD
          name: "Authenticate to Orgs"
      - run: 
          command: |
              # connect to dev hub
              echo $SFDXURL_HUB > /tmp/sfdx.url
              sfdx auth:sfdxurl:store -f /tmp/sfdx.url -a dev-hub --setdefaultdevhubusername
              #convert DX to legacy metadata
              sfdx force:source:convert -r force-app/main/default/ -d deploy
  
              cp -pr deploy /tmp/artifacts/deploy
              
              #update this to whatever the packaging branch should be!
              if [[ $CIRCLE_BRANCH == "main" ]];
              then 
                #deploy master branch to main org
                echo "CHECKONLY deploy $CIRCLE_BRANCH to main org ENABLED"
                ./dx-scripts/deploy.sh PROD 
              elif [[ $CIRCLE_BRANCH == "qa" ]];
              then
                #deploy INTQA branch to INTQA org
                echo "deploy $CIRCLE_BRANCH to INTQA org ENABLED"
                ./dx-scripts/deploy.sh INTQA
              elif [[ $CIRCLE_BRANCH == "uat" ]];
              then
                #deploy UATSTAGING branch to UATSTAGING org
                echo "deploy $CIRCLE_BRANCH to UATSTAGING org ENABLED"
                ./dx-scripts/deploy.sh UATSTAGING
              elif [[ $CIRCLE_BRANCH == "integration" ]];
              then
                #spin up and push a scratch org
                ./dx-scripts/setup_scratch.sh circle_build_$CIRCLE_BUILD_NUM do_not_open_browser
                #run tests in scratch org
                ./dx-scripts/run_tests.sh
                ./dx-scripts/delete_scratch_org.sh circle_build_$CIRCLE_BUILD_NUM -p
                #deploy UATSTAGING branch to UATSTAGING org
                echo "deploy $CIRCLE_BRANCH to PROD  org ENABLED"
                ./dx-scripts/deploy.sh PROD checkonly
              else
                # ANY OTHER BRANCHES DO THIS:
                #spin up and push a scratch org
                ./dx-scripts/setup_scratch.sh circle_build_$CIRCLE_BUILD_NUM do_not_open_browser
                #run tests in scratch org
                ./dx-scripts/run_tests.sh
                ./dx-scripts/delete_scratch_org.sh circle_build_$CIRCLE_BUILD_NUM -p
                #deploy UATSTAGING branch to UATSTAGING org
                #deploy CHECKONLY to other branches
                echo "Not on Main Branch CHECKONLY - Deploy $CIRCLE_BRANCH to PROD org ENABLED"
                ./dx-scripts/deploy.sh PROD checkonly
              fi
          name: "Deploy To Permanent Branch/Orgs"
      # - store_artifacts: 
      #     destination: ./artifacts
      #     path: /tmp/artifacts
