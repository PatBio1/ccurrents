@isTest
private class AsyncOnbeWsPrepaidTest {
   //Generated by FuseIT WSDL2Apex

   	private static System.Continuation cont = new Continuation(1);
	
	@isTest 
    private static void coverGeneratedCodeTypes() {
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock()); // wsAccountmanagementapiPrepaidCitMockImpl());
		AsyncOnbeResponsePrepaid parentAsyncObject = new AsyncOnbeResponsePrepaid();
		OnbeWsPrepaid parentObject = new OnbeWsPrepaid(); // wsAccountmanagementapiPrepaidCitiCo();
		new OnbeWsPrepaid.ArrayOf_tns2_keyValue();
		new OnbeRequestPrepaid.ActivateCardRequest();  // requestAccountmanagementapiPrepaidC
		new OnbeRequestPrepaid.activationStatusInquiryRequest();
		new OnbeRequestPrepaid.AddFundsRequest();
		new OnbeRequestPrepaid.AssignPackageRequest();
		new OnbeRequestPrepaid.CardInquiryRequest();
		new OnbeRequestPrepaid.CreateAccountRequest();
		new OnbeRequestPrepaid.CreateBulkOrderRequest();
		new OnbeRequestPrepaid.CreatePackageRequest();
		new OnbeRequestPrepaid.CvvInquiryRequest();
		new OnbeRequestPrepaid.LinkCardRequest();
		new OnbeRequestPrepaid.ServiceRequest();
		new OnbeRequestPrepaid.ServiceRequestAccountNumber();
		new OnbeRequestPrepaid.SetPinRequest();
		new OnbeRequestPrepaid.UpdateAccountStatusRequest();
		new OnbeRequestPrepaid.UpdateRegistrationRequest();
		new OnbeRequestPrepaid.withdrawRequest();
		new OnbeResponsePrepaid.ActivationCardResponse();  // responseAccountmanagementapiPrepaid
		new OnbeResponsePrepaid.activationStatusInquiryResponse();
		new OnbeResponsePrepaid.AddFundsResponse();
		new OnbeResponsePrepaid.AssignPackageResponse();
		new OnbeResponsePrepaid.CardInquiryResponse();
		new OnbeResponsePrepaid.CreateAccountResponse();
		new OnbeResponsePrepaid.CreateBulkOrderResponse();
		new OnbeResponsePrepaid.CreatePackageResponse();
		new OnbeResponsePrepaid.CvvInquiryResponse();
		new OnbeResponsePrepaid.LinkCardResponse();
		new OnbeResponsePrepaid.ServiceResponse();
		new OnbeResponsePrepaid.UpdateAccountStatusResponse();
		new OnbeResponsePrepaid.UpdateRegistrationResponse();
		new OnbeResponsePrepaid.withdrawResponse();
		new OnbeCommonPrepaid.keyValue();  // commonAccountmanagementapiPrepaidCi
		new OnbeDomainPrepaid.Addenda(); // domainAccountmanagementapiPrepaidCi.Addenda();
		new OnbeDomainPrepaid.Address();
		new OnbeDomainPrepaid.Card();
		new OnbeDomainPrepaid.Link();
		new OnbeDomainPrepaid.Load();
		new OnbeDomainPrepaid.Registration();
		new OnbeDomainPrepaid.VoidACH();
		new OnbeDomainPrepaid.VoidCheck();
		new OnbeDomainPrepaid.WithdrawACH();
		new OnbeDomainPrepaid.WithdrawCheck();
		new AsyncOnbeResponsePrepaid.ActivationCardResponseFuture(); // Async ActivationCardResponse());
		new AsyncOnbeResponsePrepaid.activationStatusInquiryResponseFuture();
		new AsyncOnbeResponsePrepaid.AddFundsResponseFuture(); // Async AddFundsResponse());
		new AsyncOnbeResponsePrepaid.AssignPackageResponseFuture();  //Async AssignPackageResponse());
		new AsyncOnbeResponsePrepaid.CardInquiryResponseFuture(); // Async CardInquiryResponse());
		new AsyncOnbeResponsePrepaid.CreateAccountResponseFuture(); //Async CreateAccountResponse());
		new AsyncOnbeResponsePrepaid.CreateBulkOrderResponseFuture();  // Async CreateBulkOrderResponse());
		new AsyncOnbeResponsePrepaid.CreatePackageResponseFuture(); // Async CreatePackageResponse());
		new AsyncOnbeResponsePrepaid.CvvInquiryResponseFuture(); // Async CvvInquiryResponse());
		new AsyncOnbeResponsePrepaid.LinkCardResponseFuture(); // Async LinkCardResponse());
		new AsyncOnbeResponsePrepaid.UpdateAccountStatusResponseFuture(); // Async UpdateAccountStatusResponse());
		new AsyncOnbeResponsePrepaid.UpdateAccountStatusResponseFuture(); // Async UpdateAccountStatusResponse());
		new AsyncOnbeResponsePrepaid.UpdateRegistrationResponseFuture(); // Async UpdateRegistrationResponse());
		new AsyncOnbeResponsePrepaid.withdrawResponseFuture();
	}
	
	@isTest static void coverCodeForAsyncActivateCard(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());  // wsAccountmanagementapiPrepaidCitMockImpl());
		//wsAccountmanagementapiPrepaidCitiCo.AccountManagementApiWebServices testObject = new wsAccountmanagementapiPrepaidCitiCo.AccountManagementApiWebServices();
		//System.assertEquals(null, testObject.activateCard(null, null, null, null));
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginActivateCard(cont, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncActivationStatusInquiry(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginActivationStatusInquiry(cont, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncAddFunds(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginAddFunds(cont, null));
	}

	@isTest static void coverCodeForAsyncAssignPackage(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginAssignPackage(cont, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncCardInquiry(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginCardInquiry(cont, null, null, null));
	}

	@isTest static void coverCodeForAsyncCreateAccount(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginCreateAccount(cont, null, null, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncCreateBulkOrder(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginCreateBulkOrder(cont, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncCreatePackage(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginCreatePackage(cont, null, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncCvvInquiry(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginCvvInquiry(cont, null, null, null));
	}

	@isTest static void coverCodeForAsyncGetRequestStatus(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.beginGetRequestStatus(cont, null, null, null, null, null));
	}

	@isTest static void coverCodeForAsyncLinkCard(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		testObject.beginLinkCard (cont, null);
	}

	@isTest static void coverCodeForAsyncSetPin(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		testObject.beginSetPin(cont, null);
	}

	@isTest static void coverCodeForAsyncUpdateAccountStatus(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		testObject.beginUpdateAccountStatus(cont, null);
	}

	@isTest static void coverCodeForAsyncUpdateRegistration(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		testObject.beginUpdateRegistration(cont, null, null, null, null);
	}

	@isTest static void coverCodeForAsyncWithdraw(){
		Test.setMock(WebServiceMock.class, new AsyncOnbeWsPrepaidMock());
		AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices testObject = new AsyncOnbeWsPrepaid.AsyncAccountManagementApiWebServices();
		testObject.beginWithdraw(cont, null, null, null, null, null, null, null, null, null);
	}
}