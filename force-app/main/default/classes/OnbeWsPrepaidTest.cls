//Generated by FuseIT WSDL2Apex

@isTest
private class OnbeWsPrepaidTest {

    // Constant
	private static final String uriAccountManagementPrepaidDomain = 'http://domain.accountmanagementapi.prepaid.citi.com';
    private static final String uriXmlSoapSchema = 'http://schemas.xmlsoap.org/soap/envelope/';

	@isTest static void coverGeneratedCodeTypes() {
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid parentObject = new OnbeWsPrepaid();
		DOM.Document doc = new DOM.Document();
		DOM.XmlNode mockNode = doc.createRootElement('Envelope', uriXmlSoapSchema, 'env');
		OnbeCommonPrepaid.keyValue onbeCommonKeyValue = new OnbeCommonPrepaid.keyValue();
        // OnbeCommonKeyValue.key = mockNode.  // populating XML nodes into Objects will take some time ...
		OnbeDomainPrepaid.Addenda onbeDomainAddenda = new OnbeDomainPrepaid.Addenda();
		OnbeDomainPrepaid.Address onbeDomainAddress = new OnbeDomainPrepaid.Address();
		OnbeDomainPrepaid.Card onbeDomainCard = new OnbeDomainPrepaid.Card();
		OnbeDomainPrepaid.Link onbeDomainLink = new OnbeDomainPrepaid.Link();
        OnbeDomainPrepaid.Load onbeDomainLoad = new OnbeDomainPrepaid.Load();
		OnbeDomainPrepaid.Registration onbeDomainRegistration = new OnbeDomainPrepaid.Registration();
		OnbeDomainPrepaid.VoidACH onbeDomainVoidAch = new OnbeDomainPrepaid.VoidACH();
		OnbeDomainPrepaid.VoidCheck onbeDomainVoidCheck = new OnbeDomainPrepaid.VoidCheck();
		OnbeDomainPrepaid.WithdrawACH onbeDomainWithdrawAch = new OnbeDomainPrepaid.WithdrawACH();
		OnbeDomainPrepaid.WithdrawCheck onbeDomainWithdrawCheck = new OnbeDomainPrepaid.WithdrawCheck();
		// OnbeRequestPrepaid.ServiceRequestAccountNumber onbeRequestServiceRequest = new OnbeRequestPrepaid.ServiceRequestAccountNumber();
		OnbeResponsePrepaid.ActivationCardResponse onbeResponseActivationCard = new OnbeResponsePrepaid.ActivationCardResponse();
		OnbeResponsePrepaid.activationStatusInquiryResponse onbeResponseActivationStatus = new OnbeResponsePrepaid.activationStatusInquiryResponse();
		OnbeResponsePrepaid.AddFundsResponse onbeResponseAddFunds = new OnbeResponsePrepaid.AddFundsResponse();
		OnbeResponsePrepaid.AssignPackageResponse onbeResponseAssignPackage = new OnbeResponsePrepaid.AssignPackageResponse();
        OnbeResponsePrepaid.CardInquiryResponse onbeResponseCardInquiry = new OnbeResponsePrepaid.CardInquiryResponse();
		OnbeResponsePrepaid.CreateAccountResponse onbeResponseCreateAccount = new OnbeResponsePrepaid.CreateAccountResponse();
        OnbeResponsePrepaid.CreateBulkOrderResponse onbeResponseCreateBulkOrder = new OnbeResponsePrepaid.CreateBulkOrderResponse();
		OnbeResponsePrepaid.LinkCardResponse onbeResponseLinkCard = new OnbeResponsePrepaid.LinkCardResponse(mockNode);
		OnbeResponsePrepaid.ServiceResponse onbResponseServiceResponse = new OnbeResponsePrepaid.ServiceResponse();
		// OnbeResponsePrepaid.UpdateAccountStatusResponse onbeResponseUpdateAccountStatus = new OnbeResponsePrepaid.UpdateAccountStatusResponse(new Dom.XmlNode());
		OnbeResponsePrepaid.UpdateRegistrationResponse onbeResponseUpdateRegistration = new OnbeResponsePrepaid.UpdateRegistrationResponse();
		OnbeResponsePrepaid.withdrawResponse onbeWithdraw = new OnbeResponsePrepaid.withdrawResponse();
		OnbeWsPrepaid.ArrayOf_tns2_keyValue onbeWsArrayOfTns2KeyValue = new OnbeWsPrepaid.ArrayOf_tns2_keyValue();

		OnbeCommonPrepaid.keyValue Obj1 = new OnbeCommonPrepaid.keyValue();
		//Obj1.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Addenda Obj2 = new OnbeDomainPrepaid.Addenda();
		//Obj2.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Address Obj3 = new OnbeDomainPrepaid.Address();
		//Obj3.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Card Obj4 = new OnbeDomainPrepaid.Card();
		Obj4.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Link Obj5 = new OnbeDomainPrepaid.Link();
		//Obj5.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Load Obj6 = new OnbeDomainPrepaid.Load();
		Obj6.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Registration Obj7 = new OnbeDomainPrepaid.Registration();
		//Obj7.populateXmlNode(mockNode);
		OnbeDomainPrepaid.VoidACH Obj8 = new OnbeDomainPrepaid.VoidACH();
		//Obj8.populateXmlNode(mockNode);
		OnbeDomainPrepaid.VoidCheck Obj9 = new OnbeDomainPrepaid.VoidCheck();
		//Obj9.populateXmlNode(mockNode);
		OnbeDomainPrepaid.WithdrawACH Obj10 = new OnbeDomainPrepaid.WithdrawACH();
		//Obj10.populateXmlNode(mockNode);
		OnbeDomainPrepaid.WithdrawCheck Obj11 = new OnbeDomainPrepaid.WithdrawCheck();
		//Obj11.populateXmlNode(mockNode);
		OnbeRequestPrepaid.ActivateCardRequest Obj12 = new OnbeRequestPrepaid.ActivateCardRequest();
		//Obj12.populateXmlNode(mockNode);
		OnbeRequestPrepaid.activationStatusInquiryRequest Obj13 = new OnbeRequestPrepaid.activationStatusInquiryRequest();
		//Obj13.populateXmlNode(mockNode);
		OnbeRequestPrepaid.AddFundsRequest Obj14 = new OnbeRequestPrepaid.AddFundsRequest();
		//Obj14.populateXmlNode(mockNode);
		OnbeRequestPrepaid.AssignPackageRequest Obj15 = new OnbeRequestPrepaid.AssignPackageRequest();
		//Obj15.populateXmlNode(mockNode);
		OnbeRequestPrepaid.CardInquiryRequest Obj16 = new OnbeRequestPrepaid.CardInquiryRequest();
		//Obj16.populateXmlNode(mockNode);
		OnbeRequestPrepaid.CreateAccountRequest Obj17 = new OnbeRequestPrepaid.CreateAccountRequest();
		//Obj17.populateXmlNode(mockNode);
		OnbeRequestPrepaid.CreateBulkOrderRequest Obj18 = new OnbeRequestPrepaid.CreateBulkOrderRequest();
		//Obj18.populateXmlNode(mockNode);
		OnbeRequestPrepaid.CreatePackageRequest Obj19 = new OnbeRequestPrepaid.CreatePackageRequest();
		//Obj19.populateXmlNode(mockNode);
		OnbeRequestPrepaid.LinkCardRequest Obj21 = new OnbeRequestPrepaid.LinkCardRequest();
		//Obj21.populateXmlNode(mockNode);
		OnbeRequestPrepaid.ServiceRequest Obj22 = new OnbeRequestPrepaid.ServiceRequest();
		//Obj22.populateXmlNode(mockNode);
		OnbeRequestPrepaid.SetPinRequest Obj24 = new OnbeRequestPrepaid.SetPinRequest();
		//Obj24.populateXmlNode(mockNode);
		OnbeRequestPrepaid.UpdateAccountStatusRequest Obj25 = new OnbeRequestPrepaid.UpdateAccountStatusRequest();
		//Obj25.populateXmlNode(mockNode);
		OnbeRequestPrepaid.UpdateRegistrationRequest Obj26 = new OnbeRequestPrepaid.UpdateRegistrationRequest();
		//Obj26.populateXmlNode(mockNode);
		OnbeRequestPrepaid.withdrawRequest Obj27 = new OnbeRequestPrepaid.withdrawRequest();
		//Obj27.populateXmlNode(mockNode);
		// needed due to additional constructor overloads
		OnbeDomainPrepaid.Card Obj28 = new OnbeDomainPrepaid.Card(mockNode);
		Obj28.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Link Obj29 = new OnbeDomainPrepaid.Link(mockNode);
		Obj29.populateXmlNode(mockNode);
		OnbeDomainPrepaid.Addenda Obj30 = new OnbeDomainPrepaid.Addenda(mockNode);
		Obj30.populateXmlNode(mockNode);

/* 		// Load class requires an XmlNode element of data type Long
		DOM.XmlNode amountNode = mockNode.addChildElement('amount', uriAccountManagementPrepaidDomain, 'null');
		mocknode.setAttribute('amount', String.valueOf(Long.valueOf('30000')));
		OnbeDomainPrepaid.Load Obj31 = new OnbeDomainPrepaid.Load(mockNode);
		Obj31.populateXmlNode(mockNode);
		// clean up
		Boolean isRemoved = mockNode.removeAttribute('amount', uriAccountManagementPrepaidDomain);
 */
		OnbeDomainPrepaid.Registration Obj32 = new OnbeDomainPrepaid.Registration(mockNode);
		Obj32.populateXmlNode(mockNode);
		OnbeDomainPrepaid.VoidACH Obj33 = new OnbeDomainPrepaid.VoidACH(mockNode);
		Obj33.populateXmlNode(mockNode);
		OnbeDomainPrepaid.VoidCheck Obj34 = new OnbeDomainPrepaid.VoidCheck(mockNode);
		Obj34.populateXmlNode(mockNode);
		OnbeDomainPrepaid.WithdrawACH Obj35 = new OnbeDomainPrepaid.WithdrawACH(mockNode);
		Obj35.populateXmlNode(mockNode);
		OnbeDomainPrepaid.WithdrawCheck Obj36 = new OnbeDomainPrepaid.WithdrawCheck(mockNode);
		Obj36.populateXmlNode(mockNode);

		// needed due to additional constructor overload
		OnbeCommonPrepaid.keyValue onbeCommonKeyValue2 = new OnbeCommonPrepaid.keyValue(mockNode);
		onbeCommonKeyValue2.populateXmlNode(mockNode);

		new OnbeResponsePrepaid.ActivationCardResponse();
		new OnbeResponsePrepaid.activationStatusInquiryResponse();
		new OnbeResponsePrepaid.AddFundsResponse();
		new OnbeResponsePrepaid.AssignPackageResponse();
		new OnbeResponsePrepaid.CardInquiryResponse();
		new OnbeResponsePrepaid.CreateAccountResponse();
		new OnbeResponsePrepaid.CreateBulkOrderResponse();
		new OnbeResponsePrepaid.LinkCardResponse(mockNode);
		new OnbeResponsePrepaid.ServiceResponse();
		// new OnbeResponsePrepaid.UpdateAccountStatusResponse(new Dom.XmlNode());
		new OnbeResponsePrepaid.UpdateRegistrationResponse();
		new OnbeResponsePrepaid.withdrawResponse();
		OnbeWsPrepaid.ArrayOf_tns2_keyValue Obj42 = new OnbeWsPrepaid.ArrayOf_tns2_keyValue();
		// Obj42.populateXmlNode(mockNode);
	}

	@isTest static void coverCodeForactivateCard(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		// System.assertEquals(null, testObject.activateCard(null, null, null, null));
	}

	@isTest static void coverCodeForactivationStatusInquiry(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.activationStatusInquiry(null, null, null, null));
	}

	@isTest static void coverCodeForaddFunds(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.addFunds(null));
	}

	@isTest static void coverCodeForassignPackage(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.assignPackage(null, null, null, null));
	}

	@isTest static void coverCodeForcardInquiry(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.cardInquiry(null, null, null));
	}

	@isTest static void coverCodeForcreateAccount(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.createAccount(null, null, null, null, null, null, null, null));
	}

	@isTest static void coverCodeForcreateBulkOrder(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		// System.assertEquals(null, testObject.createBulkOrder(null, null, null, null));
	}
    
	@isTest static void coverCodeForgetRequestStatus(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.getRequestStatus(null, null, null, null, null));
	}

	@isTest static void coverCodeForlinkCard(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.linkCard(null);
	}

	@isTest static void coverCodeForsetPin(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.setPin(null);
	}

	@isTest static void coverCodeForupdateAccountStatus(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.updateAccountStatus(null);
	}

	@isTest static void coverCodeForupdateRegistration(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.updateRegistration(null, null, null, null);
	}

	@isTest static void coverCodeForwithdraw(){
		Test.setMock(WebServiceMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.withdraw(null, null, null, null, null, null, null, null, null);
	}

/* 	@isTest static void coverCodeForcreateAccount_Http(){
		Test.setMock(HttpCalloutMock.class, new OnBeWsPrepaidHttpMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.createAccount(null, null, null, null, null, null));		
	} */

	@isTest static void coverCodeForactivateCard_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.activateCard_Http(null, null, null, null));		
	}

	@isTest static void coverCodeForactivationStatusInquiry_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.activationStatusInquiry_Http(null, null, null, null));		
	}

	@isTest static void coverCodeForaddFunds_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.addFunds_Http('', '', '', '', '', null));		
	}

	@isTest static void coverCodeForassignPackage_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.assignPackage_Http(null, null, null, null));		
	}

	@isTest static void coverCodeForcardInquiry_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.cardInquiry_Http(null, null, null));		
	}

	@isTest static void coverCodeForCreateAccount_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertNotEquals(null, testObject.createAccount_Http(null, null, null, null, null, null, null, null, null, null));		
	}

/**
	@isTest static void coverCodeForCreateBulkOrder_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.createBulkOrder_Http(null, null, null, null));		
	}

	@isTest static void coverCodeForgetRequestStatus_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		System.assertEquals(null, testObject.getRequestStatus_Http(null, null, null, null, null));		
	}
*/

	@isTest static void coverCodeForlinkCard_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.linkCard_Http(null, null, null, null, null);		
	}

	@isTest static void coverCodeForsetPin_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.setPin_Http(null, null, null, null, null);		
	}

	@isTest static void coverCodeForupdateAccountStatus_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.updateAccountStatus_Http('', '', '', '', '');		
	}

	@isTest static void coverCodeForupdateRegistration_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.updateRegistration_Http(null, null, null, null);		
	}

	@isTest static void coverCodeForwithdraw_Http(){
		Test.setMock(HttpCalloutMock.class, new OnbeWsPrepaidHttpCalloutMock());
		OnbeWsPrepaid.AccountManagementApiWebServices testObject = new OnbeWsPrepaid.AccountManagementApiWebServices();
		testObject.withdraw_Http(null, null, null, null, null, null, null, null, null);		
	}

}
