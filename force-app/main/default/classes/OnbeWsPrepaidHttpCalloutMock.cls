//Generated by FuseIT WSDL2Apex

@isTest
global class OnbeWsPrepaidHttpCalloutMock implements HttpCalloutMock {

    // Constants
    private static final String uriXmlSoapSchema = 'http://schemas.xmlsoap.org/soap/envelope/';
    private static final String uriAccountManagementMainEndpoint = 'https://webservice-qa.northlane.com:4005/accountmanagementapiws/services/AccountManagementApiWebServices';
    private static final String uriAccountManagementPrepaidWs = 'http://ws.accountmanagementapi.prepaid.citi.com';

	public static final String TEST_ACCOUNT_NUMBER = '1234567890123456';

	global HTTPResponse respond(HTTPRequest req){
		HttpResponse res = new HttpResponse();
		res.setHeader('Content-Type', 'application/json');
		DOM.Document responseDoc = new DOM.Document();
		DOM.XmlNode envelope = responseDoc.createRootElement('Envelope', uriXmlSoapSchema, 's');
		DOM.XmlNode bodyNode = envelope.addChildElement('Body', uriXmlSoapSchema, null);
        
		DOM.Document reqDoc = req.getBodyDocument();
		DOM.XmlNode rootNode = reqDoc.getRootElement();
		DOM.XmlNode reqBodyNode = rootNode.getChildElement('Body', uriXmlSoapSchema);
		DOM.XmlNode[] methodNode = reqBodyNode.getChildElements();
		if(methodNode[0].getName() == 'activateCard'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('activateCardReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'activationStatusInquiry'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('activationStatusInquiryReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'addFunds'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('addFundsReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'assignPackage'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('assignPackageReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'cardInquiry'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('cardInquiryReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'createAccount'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('createAccountReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'createBulkOrder'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('createBulkOrderReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'createPackage'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('createPackageReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'cvvInquiry'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('cvvInquiryReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'getRequestStatus'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('serviceReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'linkCard'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('linkCardReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'setPin'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('setPinReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'updateAccountStatus'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('updateAccountStatusReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'updateRegistration'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('updateRegistrationReturn', uriAccountManagementPrepaidWs, null);
		}
		else if(methodNode[0].getName() == 'withdraw'){
			DOM.XmlNode ResponseNode = bodyNode.addChildElement('withdrawReturn', uriAccountManagementPrepaidWs, null);
		}
		res.setBody(responseDoc.toXmlString());
		res.setStatusCode(200);
		return res;
	}
}