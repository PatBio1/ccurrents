public class OnbeCardAccountOperations {
   //Generated by FuseIT WSDL2Apex
	
	private static final String s_ns0 = 'urn:AccountManagement';

	public static DateTime parseDateTime(String nodeText){
			String iso8601 = nodeText;
			JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
			parser.nextToken();
			parser.nextValue();
			DateTime dt = parser.getDateTimeValue();
			//System.debug('dt: ' + dt);
			return dt;
		}
    
	public class AccountInquiry {
		public OnbeCardAccountOperations.Balance balance;
		public OnbeCardAccountOperations.CardDetail card;
		// public OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory comments;
		// public OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journal;
		public OnbeCardAccountOperations.Registration registration;
		public OnbeCardAccountOperations.Response response;
		private transient String[] balance_type_info = new String[]{'balance',s_ns0,'Balance','1','1','true'};
		private transient String[] card_type_info = new String[]{'card',s_ns0,'CardDetail','1','1','true'};
		private transient String[] comments_type_info = new String[]{'comments',s_ns0,'ArrayOf_tns1_CommentHistory','1','1','true'};
		private transient String[] journal_type_info = new String[]{'journal',s_ns0,'ArrayOf_tns1_TransactionDetail','1','1','true'};
		private transient String[] registration_type_info = new String[]{'registration',s_ns0,'Registration','1','1','true'};
		private transient String[] response_type_info = new String[]{'response',s_ns0,'Response','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'balance','card','comments','journal','registration','response'};
		
        public AccountInquiry(){
		}

		public AccountInquiry(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode balanceNode = responseNode.getChildElement('balance', 'urn:OnbeCardAccountOperations');
			if(balanceNode == null){
				this.balance = null;
			} else{
				OnbeCardAccountOperations.Balance balanceObj = new OnbeCardAccountOperations.Balance(balanceNode);
				nodesParsed.add(balanceNode);
				this.balance = balanceObj;
			}
			//System.debug(this.balance);			
			DOM.XmlNode cardNode = responseNode.getChildElement('card', 'urn:AccountManagement');
			if(cardNode == null){
				this.card = null;
			} else{
				OnbeCardAccountOperations.CardDetail cardObj = new OnbeCardAccountOperations.CardDetail(cardNode);
				nodesParsed.add(cardNode);
				this.card = cardObj;
			}
			//System.debug(this.card);			
/* 			DOM.XmlNode commentsNode = responseNode.getChildElement('comments', 'urn:AccountManagement');
			if(commentsNode == null){
				this.comments = null;
			} 
			else{
				OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory commentsObj = new OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory(commentsNode);
				nodesParsed.add(commentsNode);
				this.comments = commentsObj;
			}
			System.debug(this.comments);			
			DOM.XmlNode journalNode = responseNode.getChildElement('journal', 'urn:AccountManagement');
			if(journalNode == null){
				this.journal = null;
			} 
			else{
				OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journalObj = new OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail(journalNode);
				nodesParsed.add(journalNode);
				this.journal = journalObj;
			}
			System.debug(this.journal);	 
			*/		
			DOM.XmlNode registrationNode = responseNode.getChildElement('registration', 'urn:AccountManagement');
			if(registrationNode == null){
				this.registration = null;
			} else{
				OnbeCardAccountOperations.Registration registrationObj = new OnbeCardAccountOperations.Registration(registrationNode);
				nodesParsed.add(registrationNode);
				this.registration = registrationObj;
			}
			//System.debug(this.registration);			
			/* DOM.XmlNode responseNode = responseNode.getChildElement('response', 'urn:AccountManagement');
			if(responseNode == null){
				this.response = null;
			} else{
				OnbeCardAccountOperations.Response responseObj = new OnbeCardAccountOperations.Response(responseNode);
				nodesParsed.add(responseNode);
				this.response = responseObj;
			} */
			//System.debug(this.response);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			OnbeCardAccountOperations.Balance balanceObj = this.balance;
			Dom.XmlNode balanceNode = outerNode.addChildElement('balance', 'urn:AccountManagement', '');
			if(balanceObj != null){
				balanceObj.populateXmlNode(balanceNode);
			}
			
			OnbeCardAccountOperations.CardDetail cardObj = this.card;
			Dom.XmlNode cardNode = outerNode.addChildElement('card', 'urn:AccountManagement', '');
			if(cardObj != null){
				cardObj.populateXmlNode(cardNode);
			}
			
			/* OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory commentsObj = this.comments;
			Dom.XmlNode commentsNode = outerNode.addChildElement('comments', 'urn:AccountManagement', '');
			if(commentsObj != null){
				commentsObj.populateXmlNode(commentsNode);
			}
			
			OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journalObj = this.journal;
			Dom.XmlNode journalNode = outerNode.addChildElement('journal', 'urn:AccountManagement', '');
			if(journalObj != null){
				journalObj.populateXmlNode(journalNode);
			} */
			
			OnbeCardAccountOperations.Registration registrationObj = this.registration;
			Dom.XmlNode registrationNode = outerNode.addChildElement('registration', 'urn:AccountManagement', '');
			if(registrationObj != null){
				registrationObj.populateXmlNode(registrationNode);
			}
			
			OnbeCardAccountOperations.Response responseObj = this.response;
			Dom.XmlNode responseNode = outerNode.addChildElement('response', 'urn:AccountManagement', '');
			if(responseObj != null){
				responseObj.populateXmlNode(responseNode);
			}
		}
	}

	public class AccountProfile {
		public DOM.XmlNode address_1;  // OnbeCardAccountOperations.string_x
		public DOM.XmlNode address_2;
		public DOM.XmlNode application_id;
		public DOM.XmlNode business_phone;
		public DOM.XmlNode city;
		public DOM.XmlNode country;
		public DOM.XmlNode first_name;
		public DOM.XmlNode home_email;
		public Dom.XmlNode home_phone; // String
		public DOM.XmlNode last_name;
		public DOM.XmlNode middle_name;
		public DOM.XmlNode mobile_phone;
		public DOM.XmlNode postal;
		public DOM.XmlNode program_id;
		public DOM.XmlNode puid;
		public DOM.XmlNode state;
		public DOM.XmlNode suffix_name;
		private transient String[] address_1_type_info = new String[]{'address_1',s_ns0,'string','1','1','true'};
		private transient String[] address_2_type_info = new String[]{'address_2',s_ns0,'string','1','1','true'};
		private transient String[] application_id_type_info = new String[]{'application_id',s_ns0,'string','1','1','true'};
		private transient String[] business_phone_type_info = new String[]{'business_phone',s_ns0,'string','1','1','true'};
		private transient String[] city_type_info = new String[]{'city',s_ns0,'string','1','1','true'};
		private transient String[] country_type_info = new String[]{'country',s_ns0,'string','1','1','true'};
		private transient String[] first_name_type_info = new String[]{'first_name',s_ns0,'string','1','1','true'};
		private transient String[] home_email_type_info = new String[]{'home_email',s_ns0,'string','1','1','true'};
		private transient String[] home_phone_type_info = new String[]{'home_phone',s_ns0,'string','1','1','true'};
		private transient String[] last_name_type_info = new String[]{'last_name',s_ns0,'string','1','1','true'};
		private transient String[] middle_name_type_info = new String[]{'middle_name',s_ns0,'string','1','1','true'};
		private transient String[] mobile_phone_type_info = new String[]{'mobile_phone',s_ns0,'string','1','1','true'};
		private transient String[] postal_type_info = new String[]{'postal',s_ns0,'string','1','1','true'};
		private transient String[] program_id_type_info = new String[]{'program_id',s_ns0,'string','1','1','true'};
		private transient String[] puid_type_info = new String[]{'puid',s_ns0,'string','1','1','true'};
		private transient String[] state_type_info = new String[]{'state',s_ns0,'string','1','1','true'};
		private transient String[] suffix_name_type_info = new String[]{'suffix_name',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'address_1','address_2','application_id','business_phone','city','country','first_name','home_email','home_phone','last_name','middle_name','mobile_phone','postal','program_id','puid','state','suffix_name'};
		
		public AccountProfile(){
		}

		public AccountProfile(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode address_1Node = responseNode.getChildElement('address_1', 'urn:AccountManagement');
			if(address_1Node == null){
				this.address_1 = null;
			} else{
				DOM.XmlNode address_1Obj = address_1Node;  //  new OnbeCardAccountOperations.string_x
				nodesParsed.add(address_1Node);
				this.address_1 = address_1Obj;
			}
			//System.debug(this.address_1);			
			DOM.XmlNode address_2Node = responseNode.getChildElement('address_2', 'urn:AccountManagement');
			if(address_2Node == null){
				this.address_2 = null;
			} else{
				DOM.XmlNode address_2Obj = address_2Node;
				nodesParsed.add(address_2Node);
				this.address_2 = address_2Obj;
			}
			//System.debug(this.address_2);			
			DOM.XmlNode application_idNode = responseNode.getChildElement('application_id', 'urn:AccountManagement');
			if(application_idNode == null){
				this.application_id = null;
			} else{
				DOM.XmlNode application_idObj = application_idNode;
				nodesParsed.add(application_idNode);
				this.application_id = application_idObj;
			}
			//System.debug(this.application_id);			
			DOM.XmlNode business_phoneNode = responseNode.getChildElement('business_phone', 'urn:AccountManagement');
			if(business_phoneNode == null){
				this.business_phone = null;
			} else{
				DOM.XmlNode business_phoneObj = business_phoneNode;
				nodesParsed.add(business_phoneNode);
				this.business_phone = business_phoneObj;
			}
			//System.debug(this.business_phone);
			/* 		
			DOM.XmlNode cityNode = responseNode.getChildElement('city', 'urn:AccountManagement');
			if(cityNode == null){
				this.city = null;
			} else{
				String cityObj = new OnbeCardAccountOperations.string_x(cityNode);
				nodesParsed.add(cityNode);
				this.city = cityObj;
			}
			//System.debug(this.city);			
			DOM.XmlNode countryNode = responseNode.getChildElement('country', 'urn:AccountManagement');
			if(countryNode == null){
				this.country = null;
			} else{
				String countryObj = new OnbeCardAccountOperations.string_x(countryNode);
				nodesParsed.add(countryNode);
				this.country = countryObj;
			}
			//System.debug(this.country);			
			DOM.XmlNode first_nameNode = responseNode.getChildElement('first_name', 'urn:AccountManagement');
			if(first_nameNode == null){
				this.first_name = null;
			} else{
				String first_nameObj = new OnbeCardAccountOperations.string_x(first_nameNode);
				nodesParsed.add(first_nameNode);
				this.first_name = first_nameObj;
			}
			//System.debug(this.first_name);			
			DOM.XmlNode home_emailNode = responseNode.getChildElement('home_email', 'urn:AccountManagement');
			if(home_emailNode == null){
				this.home_email = null;
			} else{
				String home_emailObj = new OnbeCardAccountOperations.string_x(home_emailNode);
				nodesParsed.add(home_emailNode);
				this.home_email = home_emailObj;
			}
			//System.debug(this.home_email);			
			DOM.XmlNode home_phoneNode = responseNode.getChildElement('home_phone', 'urn:AccountManagement');
			if(home_phoneNode == null){
				this.home_phone = null;
			} else{
				String home_phoneObj = new OnbeCardAccountOperations.string_x(home_phoneNode);
				nodesParsed.add(home_phoneNode);
				this.home_phone = home_phoneObj;
			}
			//System.debug(this.home_phone);			
			DOM.XmlNode last_nameNode = responseNode.getChildElement('last_name', 'urn:AccountManagement');
			if(last_nameNode == null){
				this.last_name = null;
			} else{
				String last_nameObj = new OnbeCardAccountOperations.string_x(last_nameNode);
				nodesParsed.add(last_nameNode);
				this.last_name = last_nameObj;
			}
			//System.debug(this.last_name);			
			DOM.XmlNode middle_nameNode = responseNode.getChildElement('middle_name', 'urn:AccountManagement');
			if(middle_nameNode == null){
				this.middle_name = null;
			} else{
				String middle_nameObj = new OnbeCardAccountOperations.string_x(middle_nameNode);
				nodesParsed.add(middle_nameNode);
				this.middle_name = middle_nameObj;
			}
			//System.debug(this.middle_name);			
			DOM.XmlNode mobile_phoneNode = responseNode.getChildElement('mobile_phone', 'urn:AccountManagement');
			if(mobile_phoneNode == null){
				this.mobile_phone = null;
			} else{
				String mobile_phoneObj = new OnbeCardAccountOperations.string_x(mobile_phoneNode);
				nodesParsed.add(mobile_phoneNode);
				this.mobile_phone = mobile_phoneObj;
			}
			//System.debug(this.mobile_phone);			
			DOM.XmlNode postalNode = responseNode.getChildElement('postal', 'urn:AccountManagement');
			if(postalNode == null){
				this.postal = null;
			} else{
				String postalObj = new OnbeCardAccountOperations.string_x(postalNode);
				nodesParsed.add(postalNode);
				this.postal = postalObj;
			}
			//System.debug(this.postal);			
			DOM.XmlNode program_idNode = responseNode.getChildElement('program_id', 'urn:AccountManagement');
			if(program_idNode == null){
				this.program_id = null;
			} else{
				String program_idObj = new OnbeCardAccountOperations.string_x(program_idNode);
				nodesParsed.add(program_idNode);
				this.program_id = program_idObj;
			}
			//System.debug(this.program_id);			
			DOM.XmlNode puidNode = responseNode.getChildElement('puid', 'urn:AccountManagement');
			if(puidNode == null){
				this.puid = null;
			} else{
				String puidObj = new OnbeCardAccountOperations.string_x(puidNode);
				nodesParsed.add(puidNode);
				this.puid = puidObj;
			}
			//System.debug(this.puid);			
			DOM.XmlNode stateNode = responseNode.getChildElement('state', 'urn:AccountManagement');
			if(stateNode == null){
				this.state = null;
			} else{
				String stateObj = new OnbeCardAccountOperations.string_x(stateNode);
				nodesParsed.add(stateNode);
				this.state = stateObj;
			}
			//System.debug(this.state);			
			DOM.XmlNode suffix_nameNode = responseNode.getChildElement('suffix_name', 'urn:AccountManagement');
			if(suffix_nameNode == null){
				this.suffix_name = null;
			} else{
				String suffix_nameObj = new OnbeCardAccountOperations.string_x(suffix_nameNode);
				nodesParsed.add(suffix_nameNode);
				this.suffix_name = suffix_nameObj;
			} */
			//System.debug(this.suffix_name);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			DOM.XmlNode address_1Obj = this.address_1;
			Dom.XmlNode address_1Node = outerNode.addChildElement('address_1', 'urn:AccountManagement', '');
			// if(address_1Obj != null){
			// 	address_1Obj.populateXmlNode(address_1Node);
			// }
			
			DOM.XmlNode address_2Obj = this.address_2;
			Dom.XmlNode address_2Node = outerNode.addChildElement('address_2', 'urn:AccountManagement', '');
			// if(address_2Obj != null){
			// 	address_2Obj.populateXmlNode(address_2Node);
			// }
			
			DOM.XmlNode application_idObj = this.application_id;
			Dom.XmlNode application_idNode = outerNode.addChildElement('application_id', 'urn:AccountManagement', '');
			// if(application_idObj != null){
			// 	application_idObj.populateXmlNode(application_idNode);
			// }
			
			DOM.XmlNode business_phoneObj = this.business_phone;
			Dom.XmlNode business_phoneNode = outerNode.addChildElement('business_phone', 'urn:AccountManagement', '');
			// if(business_phoneObj != null){
			// 	business_phoneObj.populateXmlNode(business_phoneNode);
			// }
			
			DOM.XmlNode cityObj = this.city;
			Dom.XmlNode cityNode = outerNode.addChildElement('city', 'urn:AccountManagement', '');
			// if(cityObj != null){
			// 	cityObj.populateXmlNode(cityNode);
			// }
			
			DOM.XmlNode countryObj = this.country;
			Dom.XmlNode countryNode = outerNode.addChildElement('country', 'urn:AccountManagement', '');
			// if(countryObj != null){
			// 	countryObj.populateXmlNode(countryNode);
			// }
			
			DOM.XmlNode first_nameObj = this.first_name;
			Dom.XmlNode first_nameNode = outerNode.addChildElement('first_name', 'urn:AccountManagement', '');
			// if(first_nameObj != null){
			// 	first_nameObj.populateXmlNode(first_nameNode);
			// }
			
			DOM.XmlNode home_emailObj = this.home_email;
			Dom.XmlNode home_emailNode = outerNode.addChildElement('home_email', 'urn:AccountManagement', '');
			// if(home_emailObj != null){
			// 	home_emailObj.populateXmlNode(home_emailNode);
			// }
			
			Dom.XmlNode home_phoneObj = this.home_phone; // String
			Dom.XmlNode home_phoneNode = outerNode.addChildElement('home_phone', 'urn:AccountManagement', '');
			// if(home_phoneObj != null){
			// 	home_phoneObj.populateXmlNode(home_phoneNode);
			// }
			
			DOM.XmlNode last_nameObj = this.last_name;
			Dom.XmlNode last_nameNode = outerNode.addChildElement('last_name', 'urn:AccountManagement', '');
			// if(last_nameObj != null){
			// 	last_nameObj.populateXmlNode(last_nameNode);
			// }
			
			DOM.XmlNode middle_nameObj = this.middle_name;
			Dom.XmlNode middle_nameNode = outerNode.addChildElement('middle_name', 'urn:AccountManagement', '');
			// if(middle_nameObj != null){
			// 	middle_nameObj.populateXmlNode(middle_nameNode);
			// }
			
			DOM.XmlNode mobile_phoneObj = this.mobile_phone;
			Dom.XmlNode mobile_phoneNode = outerNode.addChildElement('mobile_phone', 'urn:AccountManagement', '');
			// if(mobile_phoneObj != null){
			// 	mobile_phoneObj.populateXmlNode(mobile_phoneNode);
			// }
			
			DOM.XmlNode postalObj = this.postal;
			Dom.XmlNode postalNode = outerNode.addChildElement('postal', 'urn:AccountManagement', '');
			// if(postalObj != null){
			// 	postalObj.populateXmlNode(postalNode);
			// }
			
			DOM.XmlNode program_idObj = this.program_id;
			Dom.XmlNode program_idNode = outerNode.addChildElement('program_id', 'urn:AccountManagement', '');
			// if(program_idObj != null){
			// 	program_idObj.populateXmlNode(program_idNode);
			// }
			
			DOM.XmlNode puidObj = this.puid;
			Dom.XmlNode puidNode = outerNode.addChildElement('puid', 'urn:AccountManagement', '');
			// if(puidObj != null){
			// 	puidObj.populateXmlNode(puidNode);
			// }
			
			DOM.XmlNode stateObj = this.state;
			Dom.XmlNode stateNode = outerNode.addChildElement('state', 'urn:AccountManagement', '');
			// if(stateObj != null){
			// 	stateObj.populateXmlNode(stateNode);
			// }
			
			DOM.XmlNode suffix_nameObj = this.suffix_name;
			Dom.XmlNode suffix_nameNode = outerNode.addChildElement('suffix_name', 'urn:AccountManagement', '');
			// if(suffix_nameObj != null){
			// 	suffix_nameObj.populateXmlNode(suffix_nameNode);
			// }
		}
	}

	public class Balance {
		public Integer balance_available;
		public DateTime balance_date;
		public Integer balance_ledger;
		public Integer balance_pending;
		private transient String[] balance_available_type_info = new String[]{'balance_available',s_ns0,'int','1','1','false'};
		private transient String[] balance_date_type_info = new String[]{'balance_date',s_ns0,'dateTime','1','1','true'};
		private transient String[] balance_ledger_type_info = new String[]{'balance_ledger',s_ns0,'int','1','1','false'};
		private transient String[] balance_pending_type_info = new String[]{'balance_pending',s_ns0,'int','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'balance_available','balance_date','balance_ledger','balance_pending'};
		
		public Balance(){
		}

		public Balance(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode balance_availableNode = responseNode.getChildElement('balance_available', 'urn:AccountManagement');
			this.balance_available = (balance_availableNode == null) ? null : Integer.valueOf(balance_availableNode.getText());
			nodesParsed.add(balance_availableNode);
			//System.debug(this.balance_available);			
			DOM.XmlNode balance_dateNode = responseNode.getChildElement('balance_date', 'urn:AccountManagement');
			this.balance_date = (balance_dateNode == null || balance_dateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(balance_dateNode.getText());
			nodesParsed.add(balance_dateNode);
			//System.debug(this.balance_date);			
			DOM.XmlNode balance_ledgerNode = responseNode.getChildElement('balance_ledger', 'urn:AccountManagement');
			this.balance_ledger = (balance_ledgerNode == null) ? null : Integer.valueOf(balance_ledgerNode.getText());
			nodesParsed.add(balance_ledgerNode);
			//System.debug(this.balance_ledger);			
			DOM.XmlNode balance_pendingNode = responseNode.getChildElement('balance_pending', 'urn:AccountManagement');
			this.balance_pending = (balance_pendingNode == null) ? null : Integer.valueOf(balance_pendingNode.getText());
			nodesParsed.add(balance_pendingNode);
			//System.debug(this.balance_pending);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode balance_availableNode = outerNode.addChildElement('balance_available', 'urn:AccountManagement', '');
			if(this.balance_available != null){
				balance_availableNode.addTextNode(String.valueOf(this.balance_available));
			}
			Dom.XmlNode balance_dateNode = outerNode.addChildElement('balance_date', 'urn:AccountManagement', '');
			if(this.balance_date != null){
				balance_dateNode.addTextNode(String.valueOf(this.balance_date));
			}
			Dom.XmlNode balance_ledgerNode = outerNode.addChildElement('balance_ledger', 'urn:AccountManagement', '');
			if(this.balance_ledger != null){
				balance_ledgerNode.addTextNode(String.valueOf(this.balance_ledger));
			}
			Dom.XmlNode balance_pendingNode = outerNode.addChildElement('balance_pending', 'urn:AccountManagement', '');
			if(this.balance_pending != null){
				balance_pendingNode.addTextNode(String.valueOf(this.balance_pending));
			}
		}
	}

	public class CardDetail {
		public DOM.XmlNode[] account_status;
		public String card_number;
		public DateTime created_date;
		public String expiration;
		public DateTime last_plastic_date;
		public Integer program_id;
		public String puid;
		public DateTime ship_date;
		private transient String[] account_status_type_info = new String[]{'account_status',s_ns0,'string','1','1','true'};
		private transient String[] card_number_type_info = new String[]{'card_number',s_ns0,'string','1','1','true'};
		private transient String[] created_date_type_info = new String[]{'created_date',s_ns0,'dateTime','1','1','true'};
		private transient String[] expiration_type_info = new String[]{'expiration',s_ns0,'string','1','1','true'};
		private transient String[] last_plastic_date_type_info = new String[]{'last_plastic_date',s_ns0,'dateTime','1','1','true'};
		private transient String[] program_id_type_info = new String[]{'program_id',s_ns0,'int','1','1','false'};
		private transient String[] puid_type_info = new String[]{'puid',s_ns0,'string','1','1','true'};
		private transient String[] ship_date_type_info = new String[]{'ship_date',s_ns0,'dateTime','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'account_status','card_number','created_date','expiration','last_plastic_date','program_id','puid','ship_date'};
		
		public CardDetail(){
		}
		
		public CardDetail(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode account_statusNode = responseNode.getChildElement('account_status', 'urn:AccountManagement');
			if(account_statusNode == null){
				this.account_status = null;
			} else{
				List<DOM.XmlNode> account_statusObj = account_statusNode.getChildElements(); // OnbeCardAccountOperations.string_x
				nodesParsed.add(account_statusNode);
				this.account_status = account_statusObj;
			}
			/* 
			//System.debug(this.account_status);			
			DOM.XmlNode card_numberNode = responseNode.getChildElement('card_number', 'urn:AccountManagement');
			if(card_numberNode == null){
				this.card_number = null;
			} else{
				String card_numberObj = new OnbeCardAccountOperations.string_x(card_numberNode);
				nodesParsed.add(card_numberNode);
				this.card_number = card_numberObj;
			}
			//System.debug(this.card_number);			
			DOM.XmlNode created_dateNode = responseNode.getChildElement('created_date', 'urn:AccountManagement');
			this.created_date = (created_dateNode == null || created_dateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(created_dateNode.getText());
			nodesParsed.add(created_dateNode);
			//System.debug(this.created_date);			
			DOM.XmlNode expirationNode = responseNode.getChildElement('expiration', 'urn:AccountManagement');
			if(expirationNode == null){
				this.expiration = null;
			} else{
				String expirationObj = new OnbeCardAccountOperations.string_x(expirationNode);
				nodesParsed.add(expirationNode);
				this.expiration = expirationObj;
			}
			//System.debug(this.expiration);			
			DOM.XmlNode last_plastic_dateNode = responseNode.getChildElement('last_plastic_date', 'urn:AccountManagement');
			this.last_plastic_date = (last_plastic_dateNode == null || last_plastic_dateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(last_plastic_dateNode.getText());
			nodesParsed.add(last_plastic_dateNode);
			//System.debug(this.last_plastic_date);			
			DOM.XmlNode program_idNode = responseNode.getChildElement('program_id', 'urn:AccountManagement');
			this.program_id = (program_idNode == null) ? null : Integer.valueOf(program_idNode.getText());
			nodesParsed.add(program_idNode);
			//System.debug(this.program_id);			
			DOM.XmlNode puidNode = responseNode.getChildElement('puid', 'urn:AccountManagement');
			if(puidNode == null){
				this.puid = null;
			} else{
				String puidObj = new OnbeCardAccountOperations.string_x(puidNode);
				nodesParsed.add(puidNode);
				this.puid = puidObj;
			}
			//System.debug(this.puid);			
			DOM.XmlNode ship_dateNode = responseNode.getChildElement('ship_date', 'urn:AccountManagement');
			this.ship_date = (ship_dateNode == null || ship_dateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(ship_dateNode.getText());
			nodesParsed.add(ship_dateNode);
			//System.debug(this.ship_date);		 */	
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			DOM.XmlNode[] account_statusObj = this.account_status;
			Dom.XmlNode account_statusNode = outerNode.addChildElement('account_status', 'urn:AccountManagement', '');
			// if(account_statusObj != null){
			// 	account_statusObj.populateXmlNode(account_statusNode);
			// }
			
			/* String[] card_numberObj = this.card_number;
			Dom.XmlNode card_numberNode = outerNode.addChildElement('card_number', 'urn:AccountManagement', '');
			if(card_numberObj != null){
				card_numberObj.populateXmlNode(card_numberNode);
			}
			Dom.XmlNode created_dateNode = outerNode.addChildElement('created_date', 'urn:AccountManagement', '');
			if(this.created_date != null){
				created_dateNode.addTextNode(String.valueOf(this.created_date));
			}
			
			String[] expirationObj = this.expiration;
			Dom.XmlNode expirationNode = outerNode.addChildElement('expiration', 'urn:AccountManagement', '');
			if(expirationObj != null){
				expirationObj.populateXmlNode(expirationNode);
			}
			Dom.XmlNode last_plastic_dateNode = outerNode.addChildElement('last_plastic_date', 'urn:AccountManagement', '');
			if(this.last_plastic_date != null){
				last_plastic_dateNode.addTextNode(String.valueOf(this.last_plastic_date));
			}
			Dom.XmlNode program_idNode = outerNode.addChildElement('program_id', 'urn:AccountManagement', '');
			if(this.program_id != null){
				program_idNode.addTextNode(String.valueOf(this.program_id));
			}
			
			String[] puidObj = this.puid;
			Dom.XmlNode puidNode = outerNode.addChildElement('puid', 'urn:AccountManagement', '');
			if(puidObj != null){
				puidObj.populateXmlNode(puidNode);
			}
			Dom.XmlNode ship_dateNode = outerNode.addChildElement('ship_date', 'urn:AccountManagement', '');
			if(this.ship_date != null){
				ship_dateNode.addTextNode(String.valueOf(this.ship_date));
			} */
		}
	}
/* 
	public class CommentHistory {
		public DateTime closedDate;
		public String emailOrPhone;
		public String employeeId;
		public Integer inquiryIdNumber;
		public String inquiryTypeDesc;
		public DateTime origDateReceived;
		public String problemDescription;
		public String secondaryTypeDesc;
		public String status;
		private transient String[] closedDate_type_info = new String[]{'closedDate',s_ns0,'dateTime','1','1','true'};
		private transient String[] emailOrPhone_type_info = new String[]{'emailOrPhone',s_ns0,'string','1','1','true'};
		private transient String[] employeeId_type_info = new String[]{'employeeId',s_ns0,'string','1','1','true'};
		private transient String[] inquiryIdNumber_type_info = new String[]{'inquiryIdNumber',s_ns0,'int','1','1','false'};
		private transient String[] inquiryTypeDesc_type_info = new String[]{'inquiryTypeDesc',s_ns0,'string','1','1','true'};
		private transient String[] origDateReceived_type_info = new String[]{'origDateReceived',s_ns0,'dateTime','1','1','true'};
		private transient String[] problemDescription_type_info = new String[]{'problemDescription',s_ns0,'string','1','1','true'};
		private transient String[] secondaryTypeDesc_type_info = new String[]{'secondaryTypeDesc',s_ns0,'string','1','1','true'};
		private transient String[] status_type_info = new String[]{'status',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'closedDate','emailOrPhone','employeeId','inquiryIdNumber','inquiryTypeDesc','origDateReceived','problemDescription','secondaryTypeDesc','status'};
		
		public CommentHistory(){
		}

		public CommentHistory(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode closedDateNode = responseNode.getChildElement('closedDate', 'urn:AccountManagement');
			this.closedDate = (closedDateNode == null || closedDateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(closedDateNode.getText());
			nodesParsed.add(closedDateNode);
			//System.debug(this.closedDate);			
			DOM.XmlNode emailOrPhoneNode = responseNode.getChildElement('emailOrPhone', 'urn:AccountManagement');
			if(emailOrPhoneNode == null){
				this.emailOrPhone = null;
			} else{
				String emailOrPhoneObj = new OnbeCardAccountOperations.string_x(emailOrPhoneNode);
				nodesParsed.add(emailOrPhoneNode);
				this.emailOrPhone = emailOrPhoneObj;
			}
			//System.debug(this.emailOrPhone);			
			DOM.XmlNode employeeIdNode = responseNode.getChildElement('employeeId', 'urn:AccountManagement');
			if(employeeIdNode == null){
				this.employeeId = null;
			} else{
				String employeeIdObj = new OnbeCardAccountOperations.string_x(employeeIdNode);
				nodesParsed.add(employeeIdNode);
				this.employeeId = employeeIdObj;
			}
			//System.debug(this.employeeId);			
			DOM.XmlNode inquiryIdNumberNode = responseNode.getChildElement('inquiryIdNumber', 'urn:AccountManagement');
			this.inquiryIdNumber = (inquiryIdNumberNode == null) ? null : Integer.valueOf(inquiryIdNumberNode.getText());
			nodesParsed.add(inquiryIdNumberNode);
			//System.debug(this.inquiryIdNumber);			
			DOM.XmlNode inquiryTypeDescNode = responseNode.getChildElement('inquiryTypeDesc', 'urn:AccountManagement');
			if(inquiryTypeDescNode == null){
				this.inquiryTypeDesc = null;
			} else{
				String inquiryTypeDescObj = new OnbeCardAccountOperations.string_x(inquiryTypeDescNode);
				nodesParsed.add(inquiryTypeDescNode);
				this.inquiryTypeDesc = inquiryTypeDescObj;
			}
			//System.debug(this.inquiryTypeDesc);			
			DOM.XmlNode origDateReceivedNode = responseNode.getChildElement('origDateReceived', 'urn:AccountManagement');
			this.origDateReceived = (origDateReceivedNode == null || origDateReceivedNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(origDateReceivedNode.getText());
			nodesParsed.add(origDateReceivedNode);
			//System.debug(this.origDateReceived);			
			DOM.XmlNode problemDescriptionNode = responseNode.getChildElement('problemDescription', 'urn:AccountManagement');
			if(problemDescriptionNode == null){
				this.problemDescription = null;
			} else{
				String problemDescriptionObj = new OnbeCardAccountOperations.string_x(problemDescriptionNode);
				nodesParsed.add(problemDescriptionNode);
				this.problemDescription = problemDescriptionObj;
			}
			//System.debug(this.problemDescription);			
			DOM.XmlNode secondaryTypeDescNode = responseNode.getChildElement('secondaryTypeDesc', 'urn:AccountManagement');
			if(secondaryTypeDescNode == null){
				this.secondaryTypeDesc = null;
			} else{
				String secondaryTypeDescObj = new OnbeCardAccountOperations.string_x(secondaryTypeDescNode);
				nodesParsed.add(secondaryTypeDescNode);
				this.secondaryTypeDesc = secondaryTypeDescObj;
			}
			//System.debug(this.secondaryTypeDesc);			
			DOM.XmlNode statusNode = responseNode.getChildElement('status', 'urn:AccountManagement');
			if(statusNode == null){
				this.status = null;
			} else{
				String statusObj = new OnbeCardAccountOperations.string_x(statusNode);
				nodesParsed.add(statusNode);
				this.status = statusObj;
			}
			//System.debug(this.status);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode closedDateNode = outerNode.addChildElement('closedDate', 'urn:AccountManagement', '');
			if(this.closedDate != null){
				closedDateNode.addTextNode(String.valueOf(this.closedDate));
			}
			
			String emailOrPhoneObj = this.emailOrPhone;
			Dom.XmlNode emailOrPhoneNode = outerNode.addChildElement('emailOrPhone', 'urn:AccountManagement', '');
			if(emailOrPhoneObj != null){
				emailOrPhoneObj.populateXmlNode(emailOrPhoneNode);
			}
			
			String employeeIdObj = this.employeeId;
			Dom.XmlNode employeeIdNode = outerNode.addChildElement('employeeId', 'urn:AccountManagement', '');
			if(employeeIdObj != null){
				employeeIdObj.populateXmlNode(employeeIdNode);
			}
			Dom.XmlNode inquiryIdNumberNode = outerNode.addChildElement('inquiryIdNumber', 'urn:AccountManagement', '');
			if(this.inquiryIdNumber != null){
				inquiryIdNumberNode.addTextNode(String.valueOf(this.inquiryIdNumber));
			}
			
			String inquiryTypeDescObj = this.inquiryTypeDesc;
			Dom.XmlNode inquiryTypeDescNode = outerNode.addChildElement('inquiryTypeDesc', 'urn:AccountManagement', '');
			if(inquiryTypeDescObj != null){
				inquiryTypeDescObj.populateXmlNode(inquiryTypeDescNode);
			}
			Dom.XmlNode origDateReceivedNode = outerNode.addChildElement('origDateReceived', 'urn:AccountManagement', '');
			if(this.origDateReceived != null){
				origDateReceivedNode.addTextNode(String.valueOf(this.origDateReceived));
			}
			
			String problemDescriptionObj = this.problemDescription;
			Dom.XmlNode problemDescriptionNode = outerNode.addChildElement('problemDescription', 'urn:AccountManagement', '');
			if(problemDescriptionObj != null){
				problemDescriptionObj.populateXmlNode(problemDescriptionNode);
			}
			
			String secondaryTypeDescObj = this.secondaryTypeDesc;
			Dom.XmlNode secondaryTypeDescNode = outerNode.addChildElement('secondaryTypeDesc', 'urn:AccountManagement', '');
			if(secondaryTypeDescObj != null){
				secondaryTypeDescObj.populateXmlNode(secondaryTypeDescNode);
			}
			
			String statusObj = this.status;
			Dom.XmlNode statusNode = outerNode.addChildElement('status', 'urn:AccountManagement', '');
			if(statusObj != null){
				statusObj.populateXmlNode(statusNode);
			}
		}
	}
 */

 /* 
	public class EscalationAssigneeValue {
		public String assigneeDescription;
		public Integer assigneeId;
		private transient String[] assigneeDescription_type_info = new String[]{'assigneeDescription',s_ns0,'string','1','1','true'};
		private transient String[] assigneeId_type_info = new String[]{'assigneeId',s_ns0,'int','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'assigneeDescription','assigneeId'};
		
		public EscalationAssigneeValue(){
		}

		public EscalationAssigneeValue(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode assigneeDescriptionNode = responseNode.getChildElement('assigneeDescription', 'urn:AccountManagement');
			if(assigneeDescriptionNode == null){
				this.assigneeDescription = null;
			} else{
				String assigneeDescriptionObj =  assigneeDescriptionNode;
				nodesParsed.add(assigneeDescriptionNode);
				this.assigneeDescription = assigneeDescriptionObj;
			}
			//System.debug(this.assigneeDescription);			
			DOM.XmlNode assigneeIdNode = responseNode.getChildElement('assigneeId', 'urn:AccountManagement');
			if(assigneeIdNode == null){
				this.assigneeId = null;
			} else{
				OnbeCardAccountOperations.Integer assigneeIdObj = Integer.valueOf(assigneeIdNode.getText()) ;  // OnbeCardAccountOperations.int_x
 				nodesParsed.add(assigneeIdNode);
				this.assigneeId = assigneeIdObj;
			}
			//System.debug(this.assigneeId);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			String assigneeDescriptionObj = this.assigneeDescription;
			Dom.XmlNode assigneeDescriptionNode = outerNode.addChildElement('assigneeDescription', 'urn:AccountManagement', '');
			if(assigneeDescriptionObj != null){
				assigneeDescriptionObj.populateXmlNode(assigneeDescriptionNode);
			}
			
			OnbeCardAccountOperations.Integer assigneeIdObj = this.assigneeId;
			Dom.XmlNode assigneeIdNode = outerNode.addChildElement('assigneeId', 'urn:AccountManagement', '');
			if(assigneeIdObj != null){
				assigneeIdObj.populateXmlNode(assigneeIdNode);
			}
		}
	}

	public class EscalationResponse {
		public OnbeCardAccountOperations.ArrayOf_tns1_EscalationAssigneeValue escalationAssigneeValue;
		public OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesByInquiryCategoryValue getCsaInquiryTypesByInquiryCategoryValue;
		public OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesCategoryValue getCsaInquiryTypesCategoryValue;
		public OnbeCardAccountOperations.Response response;
		private transient String[] escalationAssigneeValue_type_info = new String[]{'escalationAssigneeValue',s_ns0,'ArrayOf_tns1_EscalationAssigneeValue','1','1','true'};
		private transient String[] getCsaInquiryTypesByInquiryCategoryValue_type_info = new String[]{'getCsaInquiryTypesByInquiryCategoryValue',s_ns0,'ArrayOf_tns1_GetCsaInquiryTypesByInquiryCategoryValue','1','1','true'};
		private transient String[] getCsaInquiryTypesCategoryValue_type_info = new String[]{'getCsaInquiryTypesCategoryValue',s_ns0,'ArrayOf_tns1_GetCsaInquiryTypesCategoryValue','1','1','true'};
		private transient String[] response_type_info = new String[]{'response',s_ns0,'Response','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'escalationAssigneeValue','getCsaInquiryTypesByInquiryCategoryValue','getCsaInquiryTypesCategoryValue','response'};
		
		public EscalationResponse(){
		}

		public EscalationResponse(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode escalationAssigneeValueNode = responseNode.getChildElement('escalationAssigneeValue', 'urn:AccountManagement');
			if(escalationAssigneeValueNode == null){
				this.escalationAssigneeValue = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_EscalationAssigneeValue escalationAssigneeValueObj = new OnbeCardAccountOperations.ArrayOf_tns1_EscalationAssigneeValue(escalationAssigneeValueNode);
				nodesParsed.add(escalationAssigneeValueNode);
				this.escalationAssigneeValue = escalationAssigneeValueObj;
			}
			//System.debug(this.escalationAssigneeValue);			
			DOM.XmlNode getCsaInquiryTypesByInquiryCategoryValueNode = responseNode.getChildElement('getCsaInquiryTypesByInquiryCategoryValue', 'urn:AccountManagement');
			if(getCsaInquiryTypesByInquiryCategoryValueNode == null){
				this.getCsaInquiryTypesByInquiryCategoryValue = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesByInquiryCategoryValue getCsaInquiryTypesByInquiryCategoryValueObj = new OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesByInquiryCategoryValue(getCsaInquiryTypesByInquiryCategoryValueNode);
				nodesParsed.add(getCsaInquiryTypesByInquiryCategoryValueNode);
				this.getCsaInquiryTypesByInquiryCategoryValue = getCsaInquiryTypesByInquiryCategoryValueObj;
			}
			//System.debug(this.getCsaInquiryTypesByInquiryCategoryValue);			
			DOM.XmlNode getCsaInquiryTypesCategoryValueNode = responseNode.getChildElement('getCsaInquiryTypesCategoryValue', 'urn:AccountManagement');
			if(getCsaInquiryTypesCategoryValueNode == null){
				this.getCsaInquiryTypesCategoryValue = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesCategoryValue getCsaInquiryTypesCategoryValueObj = new OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesCategoryValue(getCsaInquiryTypesCategoryValueNode);
				nodesParsed.add(getCsaInquiryTypesCategoryValueNode);
				this.getCsaInquiryTypesCategoryValue = getCsaInquiryTypesCategoryValueObj;
			}
			//System.debug(this.getCsaInquiryTypesCategoryValue);			
			DOM.XmlNode responseNode = responseNode.getChildElement('response', 'urn:AccountManagement');
			if(responseNode == null){
				this.response = null;
			} else{
				OnbeCardAccountOperations.Response responseObj = new OnbeCardAccountOperations.Response(responseNode);
				nodesParsed.add(responseNode);
				this.response = responseObj;
			}
			//System.debug(this.response);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
//			OnbeCardAccountOperations.ArrayOf_tns1_EscalationAssigneeValue escalationAssigneeValueObj = this.escalationAssigneeValue;
			Dom.XmlNode escalationAssigneeValueNode = outerNode.addChildElement('escalationAssigneeValue', 'urn:AccountManagement', '');
			if(escalationAssigneeValueObj != null){
				escalationAssigneeValueObj.populateXmlNode(escalationAssigneeValueNode);
			}
			
			OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesByInquiryCategoryValue getCsaInquiryTypesByInquiryCategoryValueObj = this.getCsaInquiryTypesByInquiryCategoryValue;
			Dom.XmlNode getCsaInquiryTypesByInquiryCategoryValueNode = outerNode.addChildElement('getCsaInquiryTypesByInquiryCategoryValue', 'urn:AccountManagement', '');
			if(getCsaInquiryTypesByInquiryCategoryValueObj != null){
				getCsaInquiryTypesByInquiryCategoryValueObj.populateXmlNode(getCsaInquiryTypesByInquiryCategoryValueNode);
			}
			
			OnbeCardAccountOperations.ArrayOf_tns1_GetCsaInquiryTypesCategoryValue getCsaInquiryTypesCategoryValueObj = this.getCsaInquiryTypesCategoryValue;
			Dom.XmlNode getCsaInquiryTypesCategoryValueNode = outerNode.addChildElement('getCsaInquiryTypesCategoryValue', 'urn:AccountManagement', '');
			if(getCsaInquiryTypesCategoryValueObj != null){
				getCsaInquiryTypesCategoryValueObj.populateXmlNode(getCsaInquiryTypesCategoryValueNode);
			} 
			
			OnbeCardAccountOperations.Response responseObj = this.response;
			Dom.XmlNode responseNode = outerNode.addChildElement('response', 'urn:AccountManagement', '');
			if(responseObj != null){
				responseObj.populateXmlNode(responseNode);
			}
		}
	}
 */

	public class GetCsaInquiryTypesByInquiryCategoryValue {
		public String inquiryDesc;
		public Integer inquiryType;
		public Integer inquiryTypeCategory;
		private transient String[] inquiryDesc_type_info = new String[]{'inquiryDesc',s_ns0,'string','1','1','true'};
		private transient String[] inquiryType_type_info = new String[]{'inquiryType',s_ns0,'int','1','1','true'};
		private transient String[] inquiryTypeCategory_type_info = new String[]{'inquiryTypeCategory',s_ns0,'int','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'inquiryDesc','inquiryType','inquiryTypeCategory'};
		
        public GetCsaInquiryTypesByInquiryCategoryValue(){
		}

		public GetCsaInquiryTypesByInquiryCategoryValue(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode inquiryDescNode = responseNode.getChildElement('inquiryDesc', 'urn:AccountManagement');
			if(inquiryDescNode == null){
				this.inquiryDesc = null;
			} else{
				String inquiryDescObj = inquiryDescNode.getText();
				nodesParsed.add(inquiryDescNode);
				this.inquiryDesc = inquiryDescObj;
			}
			//System.debug(this.inquiryDesc);			
		/* 	DOM.XmlNode inquiryTypeNode = responseNode.getChildElement('inquiryType', 'urn:AccountManagement');
			if(inquiryTypeNode == null){
				this.inquiryType = null;
			} else{
				OnbeCardAccountOperations.Integer inquiryTypeObj = Integer.valueOf(inquiryTypeNode.getText()); // OnbeCardAccountOperations.int_x
				nodesParsed.add(inquiryTypeNode);
				this.inquiryType = inquiryTypeObj;
			}
			//System.debug(this.inquiryType);			
			DOM.XmlNode inquiryTypeCategoryNode = responseNode.getChildElement('inquiryTypeCategory', 'urn:AccountManagement');
			if(inquiryTypeCategoryNode == null){
				this.inquiryTypeCategory = null;
			} else{
				OnbeCardAccountOperations.Integer inquiryTypeCategoryObj =  Integer.valueOf(inquiryTypeCategoryNode.getText());
				nodesParsed.add(inquiryTypeCategoryNode);
				this.inquiryTypeCategory = inquiryTypeCategoryObj;
			} */
			//System.debug(this.inquiryTypeCategory);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			String inquiryDescObj = this.inquiryDesc;
			Dom.XmlNode inquiryDescNode = outerNode.addChildElement('inquiryDesc', 'urn:AccountManagement', '');
			// if(inquiryDescObj != null){
			// 	inquiryDescObj.populateXmlNode(inquiryDescNode);
			// }
			
			Integer inquiryTypeObj = this.inquiryType;
			Dom.XmlNode inquiryTypeNode = outerNode.addChildElement('inquiryType', 'urn:AccountManagement', '');
			// if(inquiryTypeObj != null){
			// 	inquiryTypeObj.populateXmlNode(inquiryTypeNode);
			// }
			
			Integer inquiryTypeCategoryObj = this.inquiryTypeCategory;
			Dom.XmlNode inquiryTypeCategoryNode = outerNode.addChildElement('inquiryTypeCategory', 'urn:AccountManagement', '');
			// if(inquiryTypeCategoryObj != null){
			// 	inquiryTypeCategoryObj.populateXmlNode(inquiryTypeCategoryNode);
			// }
		}
	}

	public class GetCsaInquiryTypesCategoryValue {
		public Integer inquiryTypeCategory;
		public String inquiryTypeCategoryDesc;
		private transient String[] inquiryTypeCategory_type_info = new String[]{'inquiryTypeCategory',s_ns0,'int','1','1','true'};
		private transient String[] inquiryTypeCategoryDesc_type_info = new String[]{'inquiryTypeCategoryDesc',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'inquiryTypeCategory','inquiryTypeCategoryDesc'};
		
        public GetCsaInquiryTypesCategoryValue(){
		}

		public GetCsaInquiryTypesCategoryValue(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode inquiryTypeCategoryNode = responseNode.getChildElement('inquiryTypeCategory', 'urn:AccountManagement');
			if(inquiryTypeCategoryNode == null){
				this.inquiryTypeCategory = null;
			} else{
				Integer inquiryTypeCategoryObj = Integer.valueOf(inquiryTypeCategoryNode.getText());
				nodesParsed.add(inquiryTypeCategoryNode);
				this.inquiryTypeCategory = inquiryTypeCategoryObj;
			}
			//System.debug(this.inquiryTypeCategory);			
	/* 		DOM.XmlNode inquiryTypeCategoryDescNode = responseNode.getChildElement('inquiryTypeCategoryDesc', 'urn:AccountManagement');
			if(inquiryTypeCategoryDescNode == null){
				this.inquiryTypeCategoryDesc = null;
			} else{
				String inquiryTypeCategoryDescObj = new OnbeCardAccountOperations.string_x(inquiryTypeCategoryDescNode);
				nodesParsed.add(inquiryTypeCategoryDescNode);
				this.inquiryTypeCategoryDesc = inquiryTypeCategoryDescObj;
			} */
			//System.debug(this.inquiryTypeCategoryDesc);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			Integer inquiryTypeCategoryObj = this.inquiryTypeCategory;
			Dom.XmlNode inquiryTypeCategoryNode = outerNode.addChildElement('inquiryTypeCategory', 'urn:OnbeCardAccountOperations', '');
			// if(inquiryTypeCategoryObj != null){
			// 	inquiryTypeCategoryObj.populateXmlNode(inquiryTypeCategoryNode);
			// }
			
			String inquiryTypeCategoryDescObj = this.inquiryTypeCategoryDesc;
			Dom.XmlNode inquiryTypeCategoryDescNode = outerNode.addChildElement('inquiryTypeCategoryDesc', 'urn:AccountManagement', '');
			// if(inquiryTypeCategoryDescObj != null){
			// 	inquiryTypeCategoryDescObj.populateXmlNode(inquiryTypeCategoryDescNode);
			// }
		}
	}

	public class PaymentDetail {
		public DOM.XmlNode label;
		public DOM.XmlNode value;
		private transient String[] label_type_info = new String[]{'label',s_ns0,'string','1','1','true'};
		private transient String[] value_type_info = new String[]{'value',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'label','value'};
		
        public PaymentDetail(){
		}

		public PaymentDetail(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode labelNode = responseNode.getChildElement('label', 'urn:AccountManagement');
			if(labelNode == null){
				this.label = null;
			} else{
				DOM.XmlNode labelObj = labelNode;
				nodesParsed.add(labelNode);
				this.label = labelObj;
			}
			//System.debug(this.label);			
			DOM.XmlNode valueNode = responseNode.getChildElement('value', 'urn:AccountManagement');
			if(valueNode == null){
				this.value = null;
			} else{
				DOM.XmlNode valueObj = valueNode;
				nodesParsed.add(valueNode);
				this.value = valueObj;
			}
			//System.debug(this.value);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			DOM.XmlNode labelObj = this.label;
			Dom.XmlNode labelNode = outerNode.addChildElement('label', 'urn:AccountManagement', '');
			// if(labelObj != null){
			// 	labelObj.populateXmlNode(labelNode);
			// }
			
			DOM.XmlNode valueObj = this.value;
			Dom.XmlNode valueNode = outerNode.addChildElement('value', 'urn:AccountManagement', '');
			// if(valueObj != null){
			// 	valueObj.populateXmlNode(valueNode);
			// }
		}
	}
	
	//Extends urn:AccountManagement:AccountInquiry
	public class PayoutAccountInquiry {
		public OnbeCardAccountOperations.Balance balance;
		public OnbeCardAccountOperations.CardDetail card;
		// public OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory comments;
		// public OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journal;
		// public OnbeCardAccountOperations.Registration registration;
		public OnbeCardAccountOperations.Response response;
		private transient String[] balance_type_info = new String[]{'balance',s_ns0,'Balance','1','1','true'};
		private transient String[] card_type_info = new String[]{'card',s_ns0,'CardDetail','1','1','true'};
		private transient String[] comments_type_info = new String[]{'comments',s_ns0,'ArrayOf_tns1_CommentHistory','1','1','true'};
		private transient String[] journal_type_info = new String[]{'journal',s_ns0,'ArrayOf_tns1_TransactionDetail','1','1','true'};
		private transient String[] registration_type_info = new String[]{'registration',s_ns0,'Registration','1','1','true'};
		private transient String[] response_type_info = new String[]{'response',s_ns0,'Response','1','1','true'};
		public String cardStatus;
		public String opRegistrationStatus;
		// public OnbeCardAccountOperations.PayoutApp payoutApp;
		// public OnbeCardAccountOperations.PayoutAppRegistration payoutAppRegistration;
		private transient String[] cardStatus_type_info = new String[]{'cardStatus',s_ns0,'string','1','1','true'};
		private transient String[] opRegistrationStatus_type_info = new String[]{'opRegistrationStatus',s_ns0,'string','1','1','true'};
		private transient String[] payoutApp_type_info = new String[]{'payoutApp',s_ns0,'PayoutApp','1','1','true'};
		private transient String[] payoutAppRegistration_type_info = new String[]{'payoutAppRegistration',s_ns0,'PayoutAppRegistration','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'balance','card','comments','journal','registration','response','cardStatus','opRegistrationStatus','payoutApp','payoutAppRegistration'};
		
        public PayoutAccountInquiry(){
		}

		public PayoutAccountInquiry(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode balanceNode = responseNode.getChildElement('balance', 'urn:AccountManagement');
			if(balanceNode == null){
				this.balance = null;
			} else{
				OnbeCardAccountOperations.Balance balanceObj = new OnbeCardAccountOperations.Balance(balanceNode);
				nodesParsed.add(balanceNode);
				this.balance = balanceObj;
			}
			//System.debug(this.balance);			
			DOM.XmlNode cardNode = responseNode.getChildElement('card', 'urn:AccountManagement');
			if(cardNode == null){
				this.card = null;
			} else{
				OnbeCardAccountOperations.CardDetail cardObj = new OnbeCardAccountOperations.CardDetail(cardNode);
				nodesParsed.add(cardNode);
				this.card = cardObj;
			}
			//System.debug(this.card);			
		/* 	DOM.XmlNode commentsNode = responseNode.getChildElement('comments', 'urn:AccountManagement');
			if(commentsNode == null){
				this.comments = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory commentsObj = new OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory(commentsNode);
				nodesParsed.add(commentsNode);
				this.comments = commentsObj;
			}
			//System.debug(this.comments);			
			DOM.XmlNode journalNode = responseNode.getChildElement('journal', 'urn:AccountManagement');
			if(journalNode == null){
				this.journal = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journalObj = new OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail(journalNode);
				nodesParsed.add(journalNode);
				this.journal = journalObj;
			} */
			//System.debug(this.journal);			
			// DOM.XmlNode registrationNode = responseNode.getChildElement('registration', 'urn:AccountManagement');
			// if(registrationNode == null){
			// 	this.registration = null;
			// } else{
			// 	OnbeCardAccountOperations.Registration registrationObj = new OnbeCardAccountOperations.Registration(registrationNode);
			// 	nodesParsed.add(registrationNode);
			// 	this.registration = registrationObj;
			// }
			//System.debug(this.registration);			
			// DOM.XmlNode responseNode = responseNode.getChildElement('response', 'urn:AccountManagement');
			// if(responseNode == null){
			// 	this.response = null;
			// } else{
			// 	OnbeCardAccountOperations.Response responseObj = new OnbeCardAccountOperations.Response(responseNode);
			// 	nodesParsed.add(responseNode);
			// 	this.response = responseObj;
			// }
			//System.debug(this.response);			
		/* 	DOM.XmlNode cardStatusNode = responseNode.getChildElement('cardStatus', 'urn:AccountManagement');
			if(cardStatusNode == null){
				this.cardStatus = null;
			} else{
				String cardStatusObj = new OnbeCardAccountOperations.string_x(cardStatusNode);
				nodesParsed.add(cardStatusNode);
				this.cardStatus = cardStatusObj;
			}
			//System.debug(this.cardStatus);			
			DOM.XmlNode opRegistrationStatusNode = responseNode.getChildElement('opRegistrationStatus', 'urn:AccountManagement');
			if(opRegistrationStatusNode == null){
				this.opRegistrationStatus = null;
			} else{
				String opRegistrationStatusObj = new OnbeCardAccountOperations.string_x(opRegistrationStatusNode);
				nodesParsed.add(opRegistrationStatusNode);
				this.opRegistrationStatus = opRegistrationStatusObj;
			}
			//System.debug(this.opRegistrationStatus);			
			DOM.XmlNode payoutAppNode = responseNode.getChildElement('payoutApp', 'urn:AccountManagement');
			if(payoutAppNode == null){
				this.payoutApp = null;
			} else{
				OnbeCardAccountOperations.PayoutApp payoutAppObj = new OnbeCardAccountOperations.PayoutApp(payoutAppNode);
				nodesParsed.add(payoutAppNode);
				this.payoutApp = payoutAppObj;
			}
			//System.debug(this.payoutApp);			
			DOM.XmlNode payoutAppRegistrationNode = responseNode.getChildElement('payoutAppRegistration', 'urn:AccountManagement');
			if(payoutAppRegistrationNode == null){
				this.payoutAppRegistration = null;
			} else{
				OnbeCardAccountOperations.PayoutAppRegistration payoutAppRegistrationObj = new OnbeCardAccountOperations.PayoutAppRegistration(payoutAppRegistrationNode);
				nodesParsed.add(payoutAppRegistrationNode);
				this.payoutAppRegistration = payoutAppRegistrationObj;
			} */
			//System.debug(this.payoutAppRegistration);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			OnbeCardAccountOperations.Balance balanceObj = this.balance;
			Dom.XmlNode balanceNode = outerNode.addChildElement('balance', 'urn:AccountManagement', '');
			if(balanceObj != null){
				balanceObj.populateXmlNode(balanceNode);
			}
			
			OnbeCardAccountOperations.CardDetail cardObj = this.card;
			Dom.XmlNode cardNode = outerNode.addChildElement('card', 'urn:AccountManagement', '');
			if(cardObj != null){
				cardObj.populateXmlNode(cardNode);
			}
			
	/* 		OnbeCardAccountOperations.ArrayOf_tns1_CommentHistory commentsObj = this.comments;
			Dom.XmlNode commentsNode = outerNode.addChildElement('comments', 'urn:AccountManagement', '');
			if(commentsObj != null){
				commentsObj.populateXmlNode(commentsNode);
			}
			
			OnbeCardAccountOperations.ArrayOf_tns1_TransactionDetail journalObj = this.journal;
			Dom.XmlNode journalNode = outerNode.addChildElement('journal', 'urn:AccountManagement', '');
			if(journalObj != null){
				journalObj.populateXmlNode(journalNode);
			}
			
			OnbeCardAccountOperations.Registration registrationObj = this.registration;
			Dom.XmlNode registrationNode = outerNode.addChildElement('registration', 'urn:AccountManagement', '');
			if(registrationObj != null){
				registrationObj.populateXmlNode(registrationNode);
			}
			
			OnbeCardAccountOperations.Response responseObj = this.response;
			Dom.XmlNode responseNode = outerNode.addChildElement('response', 'urn:AccountManagement', '');
			if(responseObj != null){
				responseObj.populateXmlNode(responseNode);
			}
			
			String cardStatusObj = this.cardStatus;
			Dom.XmlNode cardStatusNode = outerNode.addChildElement('cardStatus', 'urn:AccountManagement', '');
			if(cardStatusObj != null){
				cardStatusObj.populateXmlNode(cardStatusNode);
			}
			
			String opRegistrationStatusObj = this.opRegistrationStatus;
			Dom.XmlNode opRegistrationStatusNode = outerNode.addChildElement('opRegistrationStatus', 'urn:AccountManagement', '');
			if(opRegistrationStatusObj != null){
				opRegistrationStatusObj.populateXmlNode(opRegistrationStatusNode);
			}
			
			OnbeCardAccountOperations.PayoutApp payoutAppObj = this.payoutApp;
			Dom.XmlNode payoutAppNode = outerNode.addChildElement('payoutApp', 'urn:AccountManagement', '');
			if(payoutAppObj != null){
				payoutAppObj.populateXmlNode(payoutAppNode);
			}
			
			OnbeCardAccountOperations.PayoutAppRegistration payoutAppRegistrationObj = this.payoutAppRegistration;
			Dom.XmlNode payoutAppRegistrationNode = outerNode.addChildElement('payoutAppRegistration', 'urn:AccountManagement', '');
			if(payoutAppRegistrationObj != null){
				payoutAppRegistrationObj.populateXmlNode(payoutAppRegistrationNode);
			} */
		}
	}

	/* public class PayoutApp {
		public String ATMType;
		public String CSPhone;
		public String customLogoURL;
		public String feesURL;
		public String termsURL;
		private transient String[] ATMType_type_info = new String[]{'ATMType',s_ns0,'string','1','1','true'};
		private transient String[] CSPhone_type_info = new String[]{'CSPhone',s_ns0,'string','1','1','true'};
		private transient String[] customLogoURL_type_info = new String[]{'customLogoURL',s_ns0,'string','1','1','true'};
		private transient String[] feesURL_type_info = new String[]{'feesURL',s_ns0,'string','1','1','true'};
		private transient String[] termsURL_type_info = new String[]{'termsURL',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'ATMType','CSPhone','customLogoURL','feesURL','termsURL'};
		
        public PayoutApp(){
		}

		public PayoutApp(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode ATMTypeNode = responseNode.getChildElement('ATMType', 'urn:AccountManagement');
			if(ATMTypeNode == null){
				this.ATMType = null;
			} else{
				String ATMTypeObj = new OnbeCardAccountOperations.string_x(ATMTypeNode);
				nodesParsed.add(ATMTypeNode);
				this.ATMType = ATMTypeObj;
			}
			//System.debug(this.ATMType);			
			DOM.XmlNode CSPhoneNode = responseNode.getChildElement('CSPhone', 'urn:AccountManagement');
			if(CSPhoneNode == null){
				this.CSPhone = null;
			} else{
				String CSPhoneObj = new OnbeCardAccountOperations.string_x(CSPhoneNode);
				nodesParsed.add(CSPhoneNode);
				this.CSPhone = CSPhoneObj;
			}
			//System.debug(this.CSPhone);			
			DOM.XmlNode customLogoURLNode = responseNode.getChildElement('customLogoURL', 'urn:AccountManagement');
			if(customLogoURLNode == null){
				this.customLogoURL = null;
			} else{
				String customLogoURLObj = new OnbeCardAccountOperations.string_x(customLogoURLNode);
				nodesParsed.add(customLogoURLNode);
				this.customLogoURL = customLogoURLObj;
			}
			//System.debug(this.customLogoURL);			
			DOM.XmlNode feesURLNode = responseNode.getChildElement('feesURL', 'urn:AccountManagement');
			if(feesURLNode == null){
				this.feesURL = null;
			} else{
				String feesURLObj = new OnbeCardAccountOperations.string_x(feesURLNode);
				nodesParsed.add(feesURLNode);
				this.feesURL = feesURLObj;
			}
			//System.debug(this.feesURL);			
			DOM.XmlNode termsURLNode = responseNode.getChildElement('termsURL', 'urn:AccountManagement');
			if(termsURLNode == null){
				this.termsURL = null;
			} else{
				String termsURLObj = new OnbeCardAccountOperations.string_x(termsURLNode);
				nodesParsed.add(termsURLNode);
				this.termsURL = termsURLObj;
			}
			//System.debug(this.termsURL);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			String ATMTypeObj = this.ATMType;
			Dom.XmlNode ATMTypeNode = outerNode.addChildElement('ATMType', 'urn:AccountManagement', '');
			if(ATMTypeObj != null){
				ATMTypeObj.populateXmlNode(ATMTypeNode);
			}
			
			String CSPhoneObj = this.CSPhone;
			Dom.XmlNode CSPhoneNode = outerNode.addChildElement('CSPhone', 'urn:AccountManagement', '');
			if(CSPhoneObj != null){
				CSPhoneObj.populateXmlNode(CSPhoneNode);
			}
			
			String customLogoURLObj = this.customLogoURL;
			Dom.XmlNode customLogoURLNode = outerNode.addChildElement('customLogoURL', 'urn:AccountManagement', '');
			if(customLogoURLObj != null){
				customLogoURLObj.populateXmlNode(customLogoURLNode);
			}
			
			String feesURLObj = this.feesURL;
			Dom.XmlNode feesURLNode = outerNode.addChildElement('feesURL', 'urn:AccountManagement', '');
			if(feesURLObj != null){
				feesURLObj.populateXmlNode(feesURLNode);
			}
			
			String termsURLObj = this.termsURL;
			Dom.XmlNode termsURLNode = outerNode.addChildElement('termsURL', 'urn:AccountManagement', '');
			if(termsURLObj != null){
				termsURLObj.populateXmlNode(termsURLNode);
			}
		}
	}
	
	//Extends urn:AccountManagement:Registration
	public class PayoutAppRegistration {
		public String address_1;
		public String address_2;
		public String business_phone;
		public String city;
		public String email;
		public String first_name;
		public String home_phone;
		public String last_name;
		public String mobile_phone;
		public String state;
		public String zip;
		private transient String[] address_1_type_info = new String[]{'address_1',s_ns0,'string','1','1','true'};
		private transient String[] address_2_type_info = new String[]{'address_2',s_ns0,'string','1','1','true'};
		private transient String[] business_phone_type_info = new String[]{'business_phone',s_ns0,'string','1','1','true'};
		private transient String[] city_type_info = new String[]{'city',s_ns0,'string','1','1','true'};
		private transient String[] email_type_info = new String[]{'email',s_ns0,'string','1','1','true'};
		private transient String[] first_name_type_info = new String[]{'first_name',s_ns0,'string','1','1','true'};
		private transient String[] home_phone_type_info = new String[]{'home_phone',s_ns0,'string','1','1','true'};
		private transient String[] last_name_type_info = new String[]{'last_name',s_ns0,'string','1','1','true'};
		private transient String[] mobile_phone_type_info = new String[]{'mobile_phone',s_ns0,'string','1','1','true'};
		private transient String[] state_type_info = new String[]{'state',s_ns0,'string','1','1','true'};
		private transient String[] zip_type_info = new String[]{'zip',s_ns0,'string','1','1','true'};
		public String country;
		private transient String[] country_type_info = new String[]{'country',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'address_1','address_2','business_phone','city','email','first_name','home_phone','last_name','mobile_phone','state','zip','country'};
		
        public PayoutAppRegistration(){
		}

		public PayoutAppRegistration(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode address_1Node = responseNode.getChildElement('address_1', 'urn:AccountManagement');
			if(address_1Node == null){
				this.address_1 = null;
			} else{
				String address_1Obj = new OnbeCardAccountOperations.string_x(address_1Node);
				nodesParsed.add(address_1Node);
				this.address_1 = address_1Obj;
			}
			//System.debug(this.address_1);			
			DOM.XmlNode address_2Node = responseNode.getChildElement('address_2', 'urn:AccountManagement');
			if(address_2Node == null){
				this.address_2 = null;
			} else{
				String address_2Obj = new OnbeCardAccountOperations.string_x(address_2Node);
				nodesParsed.add(address_2Node);
				this.address_2 = address_2Obj;
			}
			//System.debug(this.address_2);			
			DOM.XmlNode business_phoneNode = responseNode.getChildElement('business_phone', 'urn:AccountManagement');
			if(business_phoneNode == null){
				this.business_phone = null;
			} else{
				String business_phoneObj = new OnbeCardAccountOperations.string_x(business_phoneNode);
				nodesParsed.add(business_phoneNode);
				this.business_phone = business_phoneObj;
			}
			//System.debug(this.business_phone);			
			DOM.XmlNode cityNode = responseNode.getChildElement('city', 'urn:AccountManagement');
			if(cityNode == null){
				this.city = null;
			} else{
				String cityObj = new OnbeCardAccountOperations.string_x(cityNode);
				nodesParsed.add(cityNode);
				this.city = cityObj;
			}
			//System.debug(this.city);			
			DOM.XmlNode emailNode = responseNode.getChildElement('email', 'urn:AccountManagement');
			if(emailNode == null){
				this.email = null;
			} else{
				String emailObj = new OnbeCardAccountOperations.string_x(emailNode);
				nodesParsed.add(emailNode);
				this.email = emailObj;
			}
			//System.debug(this.email);			
			DOM.XmlNode first_nameNode = responseNode.getChildElement('first_name', 'urn:AccountManagement');
			if(first_nameNode == null){
				this.first_name = null;
			} else{
				String first_nameObj = new OnbeCardAccountOperations.string_x(first_nameNode);
				nodesParsed.add(first_nameNode);
				this.first_name = first_nameObj;
			}
			//System.debug(this.first_name);			
			DOM.XmlNode home_phoneNode = responseNode.getChildElement('home_phone', 'urn:AccountManagement');
			if(home_phoneNode == null){
				this.home_phone = null;
			} else{
				String home_phoneObj = new OnbeCardAccountOperations.string_x(home_phoneNode);
				nodesParsed.add(home_phoneNode);
				this.home_phone = home_phoneObj;
			}
			//System.debug(this.home_phone);			
			DOM.XmlNode last_nameNode = responseNode.getChildElement('last_name', 'urn:AccountManagement');
			if(last_nameNode == null){
				this.last_name = null;
			} else{
				String last_nameObj = new OnbeCardAccountOperations.string_x(last_nameNode);
				nodesParsed.add(last_nameNode);
				this.last_name = last_nameObj;
			}
			//System.debug(this.last_name);			
			DOM.XmlNode mobile_phoneNode = responseNode.getChildElement('mobile_phone', 'urn:AccountManagement');
			if(mobile_phoneNode == null){
				this.mobile_phone = null;
			} else{
				String mobile_phoneObj = new OnbeCardAccountOperations.string_x(mobile_phoneNode);
				nodesParsed.add(mobile_phoneNode);
				this.mobile_phone = mobile_phoneObj;
			}
			//System.debug(this.mobile_phone);			
			DOM.XmlNode stateNode = responseNode.getChildElement('state', 'urn:AccountManagement');
			if(stateNode == null){
				this.state = null;
			} else{
				String stateObj = new OnbeCardAccountOperations.string_x(stateNode);
				nodesParsed.add(stateNode);
				this.state = stateObj;
			}
			//System.debug(this.state);			
			DOM.XmlNode zipNode = responseNode.getChildElement('zip', 'urn:AccountManagement');
			if(zipNode == null){
				this.zip = null;
			} else{
				String zipObj = new OnbeCardAccountOperations.string_x(zipNode);
				nodesParsed.add(zipNode);
				this.zip = zipObj;
			}
			//System.debug(this.zip);			
			DOM.XmlNode countryNode = responseNode.getChildElement('country', 'urn:AccountManagement');
			if(countryNode == null){
				this.country = null;
			} else{
				String countryObj = new OnbeCardAccountOperations.string_x(countryNode);
				nodesParsed.add(countryNode);
				this.country = countryObj;
			}
			//System.debug(this.country);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			String address_1Obj = this.address_1;
			Dom.XmlNode address_1Node = outerNode.addChildElement('address_1', 'urn:AccountManagement', '');
			if(address_1Obj != null){
				address_1Obj.populateXmlNode(address_1Node);
			}
			
			String address_2Obj = this.address_2;
			Dom.XmlNode address_2Node = outerNode.addChildElement('address_2', 'urn:AccountManagement', '');
			if(address_2Obj != null){
				address_2Obj.populateXmlNode(address_2Node);
			}
			
			String business_phoneObj = this.business_phone;
			Dom.XmlNode business_phoneNode = outerNode.addChildElement('business_phone', 'urn:AccountManagement', '');
			if(business_phoneObj != null){
				business_phoneObj.populateXmlNode(business_phoneNode);
			}
			
			String cityObj = this.city;
			Dom.XmlNode cityNode = outerNode.addChildElement('city', 'urn:AccountManagement', '');
			if(cityObj != null){
				cityObj.populateXmlNode(cityNode);
			}
			
			String emailObj = this.email;
			Dom.XmlNode emailNode = outerNode.addChildElement('email', 'urn:AccountManagement', '');
			if(emailObj != null){
				emailObj.populateXmlNode(emailNode);
			}
			
			String first_nameObj = this.first_name;
			Dom.XmlNode first_nameNode = outerNode.addChildElement('first_name', 'urn:AccountManagement', '');
			if(first_nameObj != null){
				first_nameObj.populateXmlNode(first_nameNode);
			}
			
			String home_phoneObj = this.home_phone;
			Dom.XmlNode home_phoneNode = outerNode.addChildElement('home_phone', 'urn:AccountManagement', '');
			if(home_phoneObj != null){
				home_phoneObj.populateXmlNode(home_phoneNode);
			}
			
			String last_nameObj = this.last_name;
			Dom.XmlNode last_nameNode = outerNode.addChildElement('last_name', 'urn:AccountManagement', '');
			if(last_nameObj != null){
				last_nameObj.populateXmlNode(last_nameNode);
			}
			
			String mobile_phoneObj = this.mobile_phone;
			Dom.XmlNode mobile_phoneNode = outerNode.addChildElement('mobile_phone', 'urn:AccountManagement', '');
			if(mobile_phoneObj != null){
				mobile_phoneObj.populateXmlNode(mobile_phoneNode);
			}
			
			String stateObj = this.state;
			Dom.XmlNode stateNode = outerNode.addChildElement('state', 'urn:AccountManagement', '');
			if(stateObj != null){
				stateObj.populateXmlNode(stateNode);
			}
			
			String zipObj = this.zip;
			Dom.XmlNode zipNode = outerNode.addChildElement('zip', 'urn:AccountManagement', '');
			if(zipObj != null){
				zipObj.populateXmlNode(zipNode);
			}
			
			String countryObj = this.country;
			Dom.XmlNode countryNode = outerNode.addChildElement('country', 'urn:AccountManagement', '');
			if(countryObj != null){
				countryObj.populateXmlNode(countryNode);
			}
		}
	}
 */
	public class Registration {
		public DOM.XmlNode address_1;
		public DOM.XmlNode address_2;
		public DOM.XmlNode business_phone;
		public DOM.XmlNode city;
		public DOM.XmlNode email;
		public DOM.XmlNode first_name;
		public DOM.XmlNode home_phone;
		public DOM.XmlNode last_name;
		public DOM.XmlNode mobile_phone;
		public DOM.XmlNode state;
		public DOM.XmlNode zip;
		private transient String[] address_1_type_info = new String[]{'address_1',s_ns0,'string','1','1','true'};
		private transient String[] address_2_type_info = new String[]{'address_2',s_ns0,'string','1','1','true'};
		private transient String[] business_phone_type_info = new String[]{'business_phone',s_ns0,'string','1','1','true'};
		private transient String[] city_type_info = new String[]{'city',s_ns0,'string','1','1','true'};
		private transient String[] email_type_info = new String[]{'email',s_ns0,'string','1','1','true'};
		private transient String[] first_name_type_info = new String[]{'first_name',s_ns0,'string','1','1','true'};
		private transient String[] home_phone_type_info = new String[]{'home_phone',s_ns0,'string','1','1','true'};
		private transient String[] last_name_type_info = new String[]{'last_name',s_ns0,'string','1','1','true'};
		private transient String[] mobile_phone_type_info = new String[]{'mobile_phone',s_ns0,'string','1','1','true'};
		private transient String[] state_type_info = new String[]{'state',s_ns0,'string','1','1','true'};
		private transient String[] zip_type_info = new String[]{'zip',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'address_1','address_2','business_phone','city','email','first_name','home_phone','last_name','mobile_phone','state','zip'};
		
        public Registration(){
		}

		public Registration(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode address_1Node = responseNode.getChildElement('address_1', 'urn:AccountManagement');
			if(address_1Node == null){
				this.address_1 = null;
			} else{
				DOM.XmlNode address_1Obj = address_1Node;
				nodesParsed.add(address_1Node);
				this.address_1 = address_1Obj;
			}
			//System.debug(this.address_1);			
			DOM.XmlNode address_2Node = responseNode.getChildElement('address_2', 'urn:AccountManagement');
			if(address_2Node == null){
				this.address_2 = null;
			} else{
				DOM.XmlNode address_2Obj = address_2Node;
				nodesParsed.add(address_2Node);
				this.address_2 = address_2Obj;
			}
			//System.debug(this.address_2);			
			DOM.XmlNode business_phoneNode = responseNode.getChildElement('business_phone', 'urn:AccountManagement');
			if(business_phoneNode == null){
				this.business_phone = null;
			} else{
				DOM.XmlNode business_phoneObj = business_phoneNode;
				nodesParsed.add(business_phoneNode);
				this.business_phone = business_phoneObj;
			}
			//System.debug(this.business_phone);			
			DOM.XmlNode cityNode = responseNode.getChildElement('city', 'urn:AccountManagement');
			if(cityNode == null){
				this.city = null;
			} else{
				DOM.XmlNode cityObj = cityNode;
				nodesParsed.add(cityNode);
				this.city = cityObj;
			}
			//System.debug(this.city);			
			DOM.XmlNode emailNode = responseNode.getChildElement('email', 'urn:AccountManagement');
			if(emailNode == null){
				this.email = null;
			} else{
				DOM.XmlNode emailObj = emailNode;
				nodesParsed.add(emailNode);
				this.email = emailObj;
			}
			//System.debug(this.email);			
			DOM.XmlNode first_nameNode = responseNode.getChildElement('first_name', 'urn:AccountManagement');
			if(first_nameNode == null){
				this.first_name = null;
			} else{
				DOM.XmlNode first_nameObj = first_nameNode;
				nodesParsed.add(first_nameNode);
				this.first_name = first_nameObj;
			}
			//System.debug(this.first_name);			
			DOM.XmlNode home_phoneNode = responseNode.getChildElement('home_phone', 'urn:AccountManagement');
			if(home_phoneNode == null){
				this.home_phone = null;
			} else{
				DOM.XmlNode home_phoneObj = home_phoneNode;
				nodesParsed.add(home_phoneNode);
				this.home_phone = home_phoneObj;
			}
			//System.debug(this.home_phone);			
			DOM.XmlNode last_nameNode = responseNode.getChildElement('last_name', 'urn:AccountManagement');
			if(last_nameNode == null){
				this.last_name = null;
			} else{
				DOM.XmlNode last_nameObj = last_nameNode;
				nodesParsed.add(last_nameNode);
				this.last_name = last_nameObj;
			}
			//System.debug(this.last_name);			
			DOM.XmlNode mobile_phoneNode = responseNode.getChildElement('mobile_phone', 'urn:AccountManagement');
			if(mobile_phoneNode == null){
				this.mobile_phone = null;
			} else{
				DOM.XmlNode mobile_phoneObj = mobile_phoneNode;
				nodesParsed.add(mobile_phoneNode);
				this.mobile_phone = mobile_phoneObj;
			}
			//System.debug(this.mobile_phone);			
			DOM.XmlNode stateNode = responseNode.getChildElement('state', 'urn:AccountManagement');
			if(stateNode == null){
				this.state = null;
			} else{
				DOM.XmlNode stateObj = stateNode;
				nodesParsed.add(stateNode);
				this.state = stateObj;
			}
			//System.debug(this.state);			
			DOM.XmlNode zipNode = responseNode.getChildElement('zip', 'urn:AccountManagement');
			if(zipNode == null){
				this.zip = null;
			} else{
				DOM.XmlNode zipObj = zipNode;
				nodesParsed.add(zipNode);
				this.zip = zipObj;
			}
			//System.debug(this.zip);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			Dom.XmlNode address_1Obj = this.address_1;
			Dom.XmlNode address_1Node = outerNode.addChildElement('address_1', 'urn:AccountManagement', '');
			// if(address_1Obj != null){
			// 	address_1Obj.populateXmlNode(address_1Node);
			// }
			
			Dom.XmlNode address_2Obj = this.address_2;
			Dom.XmlNode address_2Node = outerNode.addChildElement('address_2', 'urn:AccountManagement', '');
			// if(address_2Obj != null){
			// 	address_2Obj.populateXmlNode(address_2Node);
			// }
			
			Dom.XmlNode business_phoneObj = this.business_phone;
			Dom.XmlNode business_phoneNode = outerNode.addChildElement('business_phone', 'urn:AccountManagement', '');
			// if(business_phoneObj != null){
			// 	business_phoneObj.populateXmlNode(business_phoneNode);
			// }
			
			Dom.XmlNode cityObj = this.city;
			Dom.XmlNode cityNode = outerNode.addChildElement('city', 'urn:AccountManagement', '');
			// if(cityObj != null){
			// 	cityObj.populateXmlNode(cityNode);
			// }
			
			Dom.XmlNode emailObj = this.email;
			Dom.XmlNode emailNode = outerNode.addChildElement('email', 'urn:AccountManagement', '');
			// if(emailObj != null){
			// 	emailObj.populateXmlNode(emailNode);
			// }
			
			Dom.XmlNode first_nameObj = this.first_name;
			Dom.XmlNode first_nameNode = outerNode.addChildElement('first_name', 'urn:AccountManagement', '');
			// if(first_nameObj != null){
			// 	first_nameObj.populateXmlNode(first_nameNode);
			// }
			
			Dom.XmlNode home_phoneObj = this.home_phone;
			Dom.XmlNode home_phoneNode = outerNode.addChildElement('home_phone', 'urn:AccountManagement', '');
			// if(home_phoneObj != null){
			// 	home_phoneObj.populateXmlNode(home_phoneNode);
			// }
			
			Dom.XmlNode last_nameObj = this.last_name;
			Dom.XmlNode last_nameNode = outerNode.addChildElement('last_name', 'urn:AccountManagement', '');
			// if(last_nameObj != null){
			// 	last_nameObj.populateXmlNode(last_nameNode);
			// }
			
			Dom.XmlNode mobile_phoneObj = this.mobile_phone;
			Dom.XmlNode mobile_phoneNode = outerNode.addChildElement('mobile_phone', 'urn:AccountManagement', '');
			// if(mobile_phoneObj != null){
			// 	mobile_phoneObj.populateXmlNode(mobile_phoneNode);
			// }
			
			Dom.XmlNode stateObj = this.state;
			Dom.XmlNode stateNode = outerNode.addChildElement('state', 'urn:AccountManagement', '');
			// if(stateObj != null){
			// 	stateObj.populateXmlNode(stateNode);
			// }
			
			Dom.XmlNode zipObj = this.zip;
			Dom.XmlNode zipNode = outerNode.addChildElement('zip', 'urn:AccountManagement', '');
			// if(zipObj != null){
			// 	zipObj.populateXmlNode(zipNode);
			// }
		}
	}
	
	//Extends urn:AccountManagement:Response
	public class ReissueResponse {
		public DOM.XmlNode code;
		public DOM.XmlNode message;
		private transient String[] code_type_info = new String[]{'code',s_ns0,'int','1','1','false'};
		private transient String[] message_type_info = new String[]{'message',s_ns0,'string','1','1','true'};
		public OnbeCardAccountOperations.CardDetail cardDetail;
		private transient String[] cardDetail_type_info = new String[]{'cardDetail',s_ns0,'CardDetail','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'code','message','cardDetail'};
		
        public ReissueResponse(){
		}

		public ReissueResponse(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode codeNode = responseNode.getChildElement('code', 'urn:AccountManagement');
			this.code = (codeNode == null) ? null : codeNode;
			nodesParsed.add(codeNode);
			//System.debug(this.code);			
			DOM.XmlNode messageNode = responseNode.getChildElement('message', 'urn:AccountManagement');
			if(messageNode == null){
				this.message = null;
			} else{
				DOM.XmlNode messageObj = messageNode;
				nodesParsed.add(messageNode);
				this.message = messageObj;
			}
			//System.debug(this.message);			
			DOM.XmlNode cardDetailNode = responseNode.getChildElement('cardDetail', 'urn:AccountManagement');
			if(cardDetailNode == null){
				this.cardDetail = null;
			} else{
				OnbeCardAccountOperations.CardDetail cardDetailObj = new OnbeCardAccountOperations.CardDetail(cardDetailNode);
				nodesParsed.add(cardDetailNode);
				this.cardDetail = cardDetailObj;
			}
			//System.debug(this.cardDetail);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode codeNode = outerNode.addChildElement('code', 'urn:AccountManagement', '');
			if(this.code != null){
				codeNode.addTextNode(String.valueOf(this.code));
			}
			
			DOM.XmlNode messageObj = this.message;
			Dom.XmlNode messageNode = outerNode.addChildElement('message', 'urn:AccountManagement', '');
			// if(messageObj != null){
			// 	messageObj.populateXmlNode(messageNode);
			// }
			
			OnbeCardAccountOperations.CardDetail cardDetailObj = this.cardDetail;
			Dom.XmlNode cardDetailNode = outerNode.addChildElement('cardDetail', 'urn:AccountManagement', '');
			if(cardDetailObj != null){
				cardDetailObj.populateXmlNode(cardDetailNode);
			}
		}
	}

	public class Response {
		public DOM.XmlNode code;
		public DOM.XmlNode message;
		private transient String[] code_type_info = new String[]{'code',s_ns0,'int','1','1','false'};
		private transient String[] message_type_info = new String[]{'message',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'code','message'};
		
        public Response(){
		}

		public Response(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode codeNode = responseNode.getChildElement('code', 'urn:AccountManagement');
			this.code = (codeNode == null) ? null : codeNode;
			nodesParsed.add(codeNode);
			//System.debug(this.code);			
			DOM.XmlNode messageNode = responseNode.getChildElement('message', 'urn:AccountManagement');
			if(messageNode == null){
				this.message = null;
			} else{
				DOM.XmlNode messageObj = messageNode;
				nodesParsed.add(messageNode);
				this.message = messageObj;
			}
			//System.debug(this.message);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode codeNode = outerNode.addChildElement('code', 'urn:AccountManagement', '');
			if(this.code != null){
				codeNode.addTextNode(String.valueOf(this.code));
			}
			
			// String messageObj = this.message;
			// Dom.XmlNode messageNode = outerNode.addChildElement('message', 'urn:AccountManagement', '');
			// if(messageObj != null){
			// 	messageObj.populateXmlNode(messageNode);
			// }
		}
	}

	/* 
	public class TransactionDetail {
		public OnbeCardAccountOperations.ArrayOf_tns1_PaymentDetail payment_details;
		public Integer transaction_amount;
		public DateTime transaction_date;
		public String transaction_details;
		public Integer transaction_fee;
		public String transaction_type;
		private transient String[] payment_details_type_info = new String[]{'payment_details',s_ns0,'ArrayOf_tns1_PaymentDetail','1','1','true'};
		private transient String[] transaction_amount_type_info = new String[]{'transaction_amount',s_ns0,'int','1','1','false'};
		private transient String[] transaction_date_type_info = new String[]{'transaction_date',s_ns0,'dateTime','1','1','true'};
		private transient String[] transaction_details_type_info = new String[]{'transaction_details',s_ns0,'string','1','1','true'};
		private transient String[] transaction_fee_type_info = new String[]{'transaction_fee',s_ns0,'int','1','1','false'};
		private transient String[] transaction_type_type_info = new String[]{'transaction_type',s_ns0,'string','1','1','true'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'payment_details','transaction_amount','transaction_date','transaction_details','transaction_fee','transaction_type'};
		
        public TransactionDetail(){
		}

		public TransactionDetail(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode payment_detailsNode = responseNode.getChildElement('payment_details', 'urn:AccountManagement');
			if(payment_detailsNode == null){
				this.payment_details = null;
			} else{
				OnbeCardAccountOperations.ArrayOf_tns1_PaymentDetail payment_detailsObj = new OnbeCardAccountOperations.ArrayOf_tns1_PaymentDetail(payment_detailsNode);
				nodesParsed.add(payment_detailsNode);
				this.payment_details = payment_detailsObj;
			}
			//System.debug(this.payment_details);			
			DOM.XmlNode transaction_amountNode = responseNode.getChildElement('transaction_amount', 'urn:AccountManagement');
			this.transaction_amount = (transaction_amountNode == null) ? null : Integer.valueOf(transaction_amountNode.getText());
			nodesParsed.add(transaction_amountNode);
			//System.debug(this.transaction_amount);			
			DOM.XmlNode transaction_dateNode = responseNode.getChildElement('transaction_date', 'urn:AccountManagement');
			this.transaction_date = (transaction_dateNode == null || transaction_dateNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : OnbeCardAccountOperations.parseDateTime(transaction_dateNode.getText());
			nodesParsed.add(transaction_dateNode);
			//System.debug(this.transaction_date);			
			DOM.XmlNode transaction_detailsNode = responseNode.getChildElement('transaction_details', 'urn:AccountManagement');
			if(transaction_detailsNode == null){
				this.transaction_details = null;
			} else{
				String transaction_detailsObj = new OnbeCardAccountOperations.string_x(transaction_detailsNode);
				nodesParsed.add(transaction_detailsNode);
				this.transaction_details = transaction_detailsObj;
			}
			//System.debug(this.transaction_details);			
			DOM.XmlNode transaction_feeNode = responseNode.getChildElement('transaction_fee', 'urn:AccountManagement');
			this.transaction_fee = (transaction_feeNode == null) ? null : Integer.valueOf(transaction_feeNode.getText());
			nodesParsed.add(transaction_feeNode);
			//System.debug(this.transaction_fee);			
			DOM.XmlNode transaction_typeNode = responseNode.getChildElement('transaction_type', 'urn:AccountManagement');
			if(transaction_typeNode == null){
				this.transaction_type = null;
			} else{
				String transaction_typeObj = new OnbeCardAccountOperations.string_x(transaction_typeNode);
				nodesParsed.add(transaction_typeNode);
				this.transaction_type = transaction_typeObj;
			}
			//System.debug(this.transaction_type);			
		}

		public void populateXmlNode(Dom.XmlNode outerNode){
			
			OnbeCardAccountOperations.ArrayOf_tns1_PaymentDetail payment_detailsObj = this.payment_details;
			Dom.XmlNode payment_detailsNode = outerNode.addChildElement('payment_details', 'urn:AccountManagement', '');
			if(payment_detailsObj != null){
				payment_detailsObj.populateXmlNode(payment_detailsNode);
			}
			Dom.XmlNode transaction_amountNode = outerNode.addChildElement('transaction_amount', 'urn:AccountManagement', '');
			if(this.transaction_amount != null){
				transaction_amountNode.addTextNode(String.valueOf(this.transaction_amount));
			}
			Dom.XmlNode transaction_dateNode = outerNode.addChildElement('transaction_date', 'urn:AccountManagement', '');
			if(this.transaction_date != null){
				transaction_dateNode.addTextNode(String.valueOf(this.transaction_date));
			}
			
			String transaction_detailsObj = this.transaction_details;
			Dom.XmlNode transaction_detailsNode = outerNode.addChildElement('transaction_details', 'urn:AccountManagement', '');
			if(transaction_detailsObj != null){
				transaction_detailsObj.populateXmlNode(transaction_detailsNode);
			}
			Dom.XmlNode transaction_feeNode = outerNode.addChildElement('transaction_fee', 'urn:AccountManagement', '');
			if(this.transaction_fee != null){
				transaction_feeNode.addTextNode(String.valueOf(this.transaction_fee));
			}
			
			String transaction_typeObj = this.transaction_type;
			Dom.XmlNode transaction_typeNode = outerNode.addChildElement('transaction_type', 'urn:AccountManagement', '');
			if(transaction_typeObj != null){
				transaction_typeObj.populateXmlNode(transaction_typeNode);
			}
		}
	} */
    
}